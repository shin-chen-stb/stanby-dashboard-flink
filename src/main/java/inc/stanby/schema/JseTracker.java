/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package inc.stanby.schema;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class JseTracker extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 8903925638515772312L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"JseTracker\",\"namespace\":\"inc.stanby.schema\",\"fields\":[{\"name\":\"adDistributionId\",\"type\":\"string\",\"default\":\"NONE\"},{\"name\":\"adJobs\",\"type\":\"string\",\"default\":\"NONE\"},{\"name\":\"adRequestId\",\"type\":\"string\",\"default\":\"NONE\"},{\"name\":\"address\",\"type\":{\"type\":\"record\",\"name\":\"Address\",\"fields\":[{\"name\":\"addressLevel\",\"type\":\"int\"},{\"name\":\"cityCodes\",\"type\":\"string\"},{\"name\":\"coordinatePoint\",\"type\":{\"type\":\"record\",\"name\":\"GeoLocation\",\"fields\":[{\"name\":\"latitude\",\"type\":\"float\"},{\"name\":\"longitude\",\"type\":\"float\"}]}},{\"name\":\"distance\",\"type\":\"int\"},{\"name\":\"prefectureCode\",\"type\":\"string\"},{\"name\":\"station\",\"type\":\"string\"}]}},{\"name\":\"bucketType\",\"type\":\"string\",\"default\":\"NONE\"},{\"name\":\"category\",\"type\":\"string\",\"default\":\"NONE\"},{\"name\":\"clickId\",\"type\":\"string\",\"default\":\"NONE\"},{\"name\":\"companyName\",\"type\":\"string\",\"default\":\"NONE\"},{\"name\":\"position\",\"type\":\"int\"},{\"name\":\"createDateTime\",\"type\":\"int\",\"logicalType\":\"date\"},{\"name\":\"createdDateTime\",\"type\":\"int\",\"logicalType\":\"date\"},{\"name\":\"documentId\",\"type\":\"string\",\"default\":\"NONE\"},{\"name\":\"eventType\",\"type\":\"string\",\"default\":\"NONE\"},{\"name\":\"indexType\",\"type\":\"string\",\"default\":\"NONE\"},{\"name\":\"ip\",\"type\":\"string\",\"default\":\"NONE\"},{\"name\":\"isAd\",\"type\":\"boolean\"},{\"name\":\"jobContent\",\"type\":\"string\",\"default\":\"NONE\"},{\"name\":\"jobTitle\",\"type\":\"string\",\"default\":\"NONE\"},{\"name\":\"jobType\",\"type\":\"string\",\"default\":\"NONE\"},{\"name\":\"jobVersionDate\",\"type\":\"int\",\"logicalType\":\"date\"},{\"name\":\"keyword\",\"type\":\"string\",\"default\":\"NONE\"},{\"name\":\"location\",\"type\":\"string\",\"default\":\"NONE\"},{\"name\":\"log_host\",\"type\":\"boolean\",\"default\":false},{\"name\":\"newJobs\",\"type\":\"string\",\"default\":\"NONE\"},{\"name\":\"openDate\",\"type\":\"int\",\"logicalType\":\"date\"},{\"name\":\"order\",\"type\":\"int\"},{\"name\":\"originDocumentId\",\"type\":\"string\",\"default\":\"NONE\"},{\"name\":\"originalKeyword\",\"type\":\"string\",\"default\":\"NONE\"},{\"name\":\"referer\",\"type\":\"string\",\"default\":\"NONE\"},{\"name\":\"relatedJobs\",\"type\":\"string\",\"default\":\"NONE\"},{\"name\":\"role\",\"type\":\"string\",\"default\":\"NONE\"},{\"name\":\"salary\",\"type\":\"string\",\"default\":\"NONE\"},{\"name\":\"searchPage\",\"type\":\"string\",\"default\":\"NONE\"},{\"name\":\"searchRequestId\",\"type\":\"string\",\"default\":\"NONE\"},{\"name\":\"searchRequestUrl\",\"type\":\"string\",\"default\":\"NONE\"},{\"name\":\"siteCodes\",\"type\":\"string\",\"default\":\"NONE\"},{\"name\":\"siteName\",\"type\":\"string\",\"default\":\"NONE\"},{\"name\":\"tag\",\"type\":\"string\",\"default\":\"NONE\"},{\"name\":\"time\",\"type\":\"int\",\"logicalType\":\"date\"},{\"name\":\"totalHits\",\"type\":\"int\"},{\"name\":\"uaCategory\",\"type\":\"string\",\"default\":\"NONE\"},{\"name\":\"uaValue\",\"type\":\"string\",\"default\":\"NONE\"},{\"name\":\"uid\",\"type\":\"string\",\"default\":\"NONE\"},{\"name\":\"updateDate\",\"type\":\"int\",\"logicalType\":\"date\"},{\"name\":\"visitId\",\"type\":\"string\",\"default\":\"NONE\"},{\"name\":\"workLocation\",\"type\":\"string\",\"default\":\"NONE\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<JseTracker> ENCODER =
      new BinaryMessageEncoder<JseTracker>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<JseTracker> DECODER =
      new BinaryMessageDecoder<JseTracker>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<JseTracker> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<JseTracker> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<JseTracker>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this JseTracker to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a JseTracker from a ByteBuffer. */
  public static JseTracker fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence adDistributionId;
  @Deprecated public java.lang.CharSequence adJobs;
  @Deprecated public java.lang.CharSequence adRequestId;
  @Deprecated public inc.stanby.schema.Address address;
  @Deprecated public java.lang.CharSequence bucketType;
  @Deprecated public java.lang.CharSequence category;
  @Deprecated public java.lang.CharSequence clickId;
  @Deprecated public java.lang.CharSequence companyName;
  @Deprecated public int position;
  @Deprecated public int createDateTime;
  @Deprecated public int createdDateTime;
  @Deprecated public java.lang.CharSequence documentId;
  @Deprecated public java.lang.CharSequence eventType;
  @Deprecated public java.lang.CharSequence indexType;
  @Deprecated public java.lang.CharSequence ip;
  @Deprecated public boolean isAd;
  @Deprecated public java.lang.CharSequence jobContent;
  @Deprecated public java.lang.CharSequence jobTitle;
  @Deprecated public java.lang.CharSequence jobType;
  @Deprecated public int jobVersionDate;
  @Deprecated public java.lang.CharSequence keyword;
  @Deprecated public java.lang.CharSequence location;
  @Deprecated public boolean log_host;
  @Deprecated public java.lang.CharSequence newJobs;
  @Deprecated public int openDate;
  @Deprecated public int order;
  @Deprecated public java.lang.CharSequence originDocumentId;
  @Deprecated public java.lang.CharSequence originalKeyword;
  @Deprecated public java.lang.CharSequence referer;
  @Deprecated public java.lang.CharSequence relatedJobs;
  @Deprecated public java.lang.CharSequence role;
  @Deprecated public java.lang.CharSequence salary;
  @Deprecated public java.lang.CharSequence searchPage;
  @Deprecated public java.lang.CharSequence searchRequestId;
  @Deprecated public java.lang.CharSequence searchRequestUrl;
  @Deprecated public java.lang.CharSequence siteCodes;
  @Deprecated public java.lang.CharSequence siteName;
  @Deprecated public java.lang.CharSequence tag;
  @Deprecated public int time;
  @Deprecated public int totalHits;
  @Deprecated public java.lang.CharSequence uaCategory;
  @Deprecated public java.lang.CharSequence uaValue;
  @Deprecated public java.lang.CharSequence uid;
  @Deprecated public int updateDate;
  @Deprecated public java.lang.CharSequence visitId;
  @Deprecated public java.lang.CharSequence workLocation;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public JseTracker() {}

  /**
   * All-args constructor.
   * @param adDistributionId The new value for adDistributionId
   * @param adJobs The new value for adJobs
   * @param adRequestId The new value for adRequestId
   * @param address The new value for address
   * @param bucketType The new value for bucketType
   * @param category The new value for category
   * @param clickId The new value for clickId
   * @param companyName The new value for companyName
   * @param position The new value for position
   * @param createDateTime The new value for createDateTime
   * @param createdDateTime The new value for createdDateTime
   * @param documentId The new value for documentId
   * @param eventType The new value for eventType
   * @param indexType The new value for indexType
   * @param ip The new value for ip
   * @param isAd The new value for isAd
   * @param jobContent The new value for jobContent
   * @param jobTitle The new value for jobTitle
   * @param jobType The new value for jobType
   * @param jobVersionDate The new value for jobVersionDate
   * @param keyword The new value for keyword
   * @param location The new value for location
   * @param log_host The new value for log_host
   * @param newJobs The new value for newJobs
   * @param openDate The new value for openDate
   * @param order The new value for order
   * @param originDocumentId The new value for originDocumentId
   * @param originalKeyword The new value for originalKeyword
   * @param referer The new value for referer
   * @param relatedJobs The new value for relatedJobs
   * @param role The new value for role
   * @param salary The new value for salary
   * @param searchPage The new value for searchPage
   * @param searchRequestId The new value for searchRequestId
   * @param searchRequestUrl The new value for searchRequestUrl
   * @param siteCodes The new value for siteCodes
   * @param siteName The new value for siteName
   * @param tag The new value for tag
   * @param time The new value for time
   * @param totalHits The new value for totalHits
   * @param uaCategory The new value for uaCategory
   * @param uaValue The new value for uaValue
   * @param uid The new value for uid
   * @param updateDate The new value for updateDate
   * @param visitId The new value for visitId
   * @param workLocation The new value for workLocation
   */
  public JseTracker(java.lang.CharSequence adDistributionId, java.lang.CharSequence adJobs, java.lang.CharSequence adRequestId, inc.stanby.schema.Address address, java.lang.CharSequence bucketType, java.lang.CharSequence category, java.lang.CharSequence clickId, java.lang.CharSequence companyName, java.lang.Integer position, java.lang.Integer createDateTime, java.lang.Integer createdDateTime, java.lang.CharSequence documentId, java.lang.CharSequence eventType, java.lang.CharSequence indexType, java.lang.CharSequence ip, java.lang.Boolean isAd, java.lang.CharSequence jobContent, java.lang.CharSequence jobTitle, java.lang.CharSequence jobType, java.lang.Integer jobVersionDate, java.lang.CharSequence keyword, java.lang.CharSequence location, java.lang.Boolean log_host, java.lang.CharSequence newJobs, java.lang.Integer openDate, java.lang.Integer order, java.lang.CharSequence originDocumentId, java.lang.CharSequence originalKeyword, java.lang.CharSequence referer, java.lang.CharSequence relatedJobs, java.lang.CharSequence role, java.lang.CharSequence salary, java.lang.CharSequence searchPage, java.lang.CharSequence searchRequestId, java.lang.CharSequence searchRequestUrl, java.lang.CharSequence siteCodes, java.lang.CharSequence siteName, java.lang.CharSequence tag, java.lang.Integer time, java.lang.Integer totalHits, java.lang.CharSequence uaCategory, java.lang.CharSequence uaValue, java.lang.CharSequence uid, java.lang.Integer updateDate, java.lang.CharSequence visitId, java.lang.CharSequence workLocation) {
    this.adDistributionId = adDistributionId;
    this.adJobs = adJobs;
    this.adRequestId = adRequestId;
    this.address = address;
    this.bucketType = bucketType;
    this.category = category;
    this.clickId = clickId;
    this.companyName = companyName;
    this.position = position;
    this.createDateTime = createDateTime;
    this.createdDateTime = createdDateTime;
    this.documentId = documentId;
    this.eventType = eventType;
    this.indexType = indexType;
    this.ip = ip;
    this.isAd = isAd;
    this.jobContent = jobContent;
    this.jobTitle = jobTitle;
    this.jobType = jobType;
    this.jobVersionDate = jobVersionDate;
    this.keyword = keyword;
    this.location = location;
    this.log_host = log_host;
    this.newJobs = newJobs;
    this.openDate = openDate;
    this.order = order;
    this.originDocumentId = originDocumentId;
    this.originalKeyword = originalKeyword;
    this.referer = referer;
    this.relatedJobs = relatedJobs;
    this.role = role;
    this.salary = salary;
    this.searchPage = searchPage;
    this.searchRequestId = searchRequestId;
    this.searchRequestUrl = searchRequestUrl;
    this.siteCodes = siteCodes;
    this.siteName = siteName;
    this.tag = tag;
    this.time = time;
    this.totalHits = totalHits;
    this.uaCategory = uaCategory;
    this.uaValue = uaValue;
    this.uid = uid;
    this.updateDate = updateDate;
    this.visitId = visitId;
    this.workLocation = workLocation;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return adDistributionId;
    case 1: return adJobs;
    case 2: return adRequestId;
    case 3: return address;
    case 4: return bucketType;
    case 5: return category;
    case 6: return clickId;
    case 7: return companyName;
    case 8: return position;
    case 9: return createDateTime;
    case 10: return createdDateTime;
    case 11: return documentId;
    case 12: return eventType;
    case 13: return indexType;
    case 14: return ip;
    case 15: return isAd;
    case 16: return jobContent;
    case 17: return jobTitle;
    case 18: return jobType;
    case 19: return jobVersionDate;
    case 20: return keyword;
    case 21: return location;
    case 22: return log_host;
    case 23: return newJobs;
    case 24: return openDate;
    case 25: return order;
    case 26: return originDocumentId;
    case 27: return originalKeyword;
    case 28: return referer;
    case 29: return relatedJobs;
    case 30: return role;
    case 31: return salary;
    case 32: return searchPage;
    case 33: return searchRequestId;
    case 34: return searchRequestUrl;
    case 35: return siteCodes;
    case 36: return siteName;
    case 37: return tag;
    case 38: return time;
    case 39: return totalHits;
    case 40: return uaCategory;
    case 41: return uaValue;
    case 42: return uid;
    case 43: return updateDate;
    case 44: return visitId;
    case 45: return workLocation;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: adDistributionId = (java.lang.CharSequence)value$; break;
    case 1: adJobs = (java.lang.CharSequence)value$; break;
    case 2: adRequestId = (java.lang.CharSequence)value$; break;
    case 3: address = (inc.stanby.schema.Address)value$; break;
    case 4: bucketType = (java.lang.CharSequence)value$; break;
    case 5: category = (java.lang.CharSequence)value$; break;
    case 6: clickId = (java.lang.CharSequence)value$; break;
    case 7: companyName = (java.lang.CharSequence)value$; break;
    case 8: position = (java.lang.Integer)value$; break;
    case 9: createDateTime = (java.lang.Integer)value$; break;
    case 10: createdDateTime = (java.lang.Integer)value$; break;
    case 11: documentId = (java.lang.CharSequence)value$; break;
    case 12: eventType = (java.lang.CharSequence)value$; break;
    case 13: indexType = (java.lang.CharSequence)value$; break;
    case 14: ip = (java.lang.CharSequence)value$; break;
    case 15: isAd = (java.lang.Boolean)value$; break;
    case 16: jobContent = (java.lang.CharSequence)value$; break;
    case 17: jobTitle = (java.lang.CharSequence)value$; break;
    case 18: jobType = (java.lang.CharSequence)value$; break;
    case 19: jobVersionDate = (java.lang.Integer)value$; break;
    case 20: keyword = (java.lang.CharSequence)value$; break;
    case 21: location = (java.lang.CharSequence)value$; break;
    case 22: log_host = (java.lang.Boolean)value$; break;
    case 23: newJobs = (java.lang.CharSequence)value$; break;
    case 24: openDate = (java.lang.Integer)value$; break;
    case 25: order = (java.lang.Integer)value$; break;
    case 26: originDocumentId = (java.lang.CharSequence)value$; break;
    case 27: originalKeyword = (java.lang.CharSequence)value$; break;
    case 28: referer = (java.lang.CharSequence)value$; break;
    case 29: relatedJobs = (java.lang.CharSequence)value$; break;
    case 30: role = (java.lang.CharSequence)value$; break;
    case 31: salary = (java.lang.CharSequence)value$; break;
    case 32: searchPage = (java.lang.CharSequence)value$; break;
    case 33: searchRequestId = (java.lang.CharSequence)value$; break;
    case 34: searchRequestUrl = (java.lang.CharSequence)value$; break;
    case 35: siteCodes = (java.lang.CharSequence)value$; break;
    case 36: siteName = (java.lang.CharSequence)value$; break;
    case 37: tag = (java.lang.CharSequence)value$; break;
    case 38: time = (java.lang.Integer)value$; break;
    case 39: totalHits = (java.lang.Integer)value$; break;
    case 40: uaCategory = (java.lang.CharSequence)value$; break;
    case 41: uaValue = (java.lang.CharSequence)value$; break;
    case 42: uid = (java.lang.CharSequence)value$; break;
    case 43: updateDate = (java.lang.Integer)value$; break;
    case 44: visitId = (java.lang.CharSequence)value$; break;
    case 45: workLocation = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'adDistributionId' field.
   * @return The value of the 'adDistributionId' field.
   */
  public java.lang.CharSequence getAdDistributionId() {
    return adDistributionId;
  }

  /**
   * Sets the value of the 'adDistributionId' field.
   * @param value the value to set.
   */
  public void setAdDistributionId(java.lang.CharSequence value) {
    this.adDistributionId = value;
  }

  /**
   * Gets the value of the 'adJobs' field.
   * @return The value of the 'adJobs' field.
   */
  public java.lang.CharSequence getAdJobs() {
    return adJobs;
  }

  /**
   * Sets the value of the 'adJobs' field.
   * @param value the value to set.
   */
  public void setAdJobs(java.lang.CharSequence value) {
    this.adJobs = value;
  }

  /**
   * Gets the value of the 'adRequestId' field.
   * @return The value of the 'adRequestId' field.
   */
  public java.lang.CharSequence getAdRequestId() {
    return adRequestId;
  }

  /**
   * Sets the value of the 'adRequestId' field.
   * @param value the value to set.
   */
  public void setAdRequestId(java.lang.CharSequence value) {
    this.adRequestId = value;
  }

  /**
   * Gets the value of the 'address' field.
   * @return The value of the 'address' field.
   */
  public inc.stanby.schema.Address getAddress() {
    return address;
  }

  /**
   * Sets the value of the 'address' field.
   * @param value the value to set.
   */
  public void setAddress(inc.stanby.schema.Address value) {
    this.address = value;
  }

  /**
   * Gets the value of the 'bucketType' field.
   * @return The value of the 'bucketType' field.
   */
  public java.lang.CharSequence getBucketType() {
    return bucketType;
  }

  /**
   * Sets the value of the 'bucketType' field.
   * @param value the value to set.
   */
  public void setBucketType(java.lang.CharSequence value) {
    this.bucketType = value;
  }

  /**
   * Gets the value of the 'category' field.
   * @return The value of the 'category' field.
   */
  public java.lang.CharSequence getCategory() {
    return category;
  }

  /**
   * Sets the value of the 'category' field.
   * @param value the value to set.
   */
  public void setCategory(java.lang.CharSequence value) {
    this.category = value;
  }

  /**
   * Gets the value of the 'clickId' field.
   * @return The value of the 'clickId' field.
   */
  public java.lang.CharSequence getClickId() {
    return clickId;
  }

  /**
   * Sets the value of the 'clickId' field.
   * @param value the value to set.
   */
  public void setClickId(java.lang.CharSequence value) {
    this.clickId = value;
  }

  /**
   * Gets the value of the 'companyName' field.
   * @return The value of the 'companyName' field.
   */
  public java.lang.CharSequence getCompanyName() {
    return companyName;
  }

  /**
   * Sets the value of the 'companyName' field.
   * @param value the value to set.
   */
  public void setCompanyName(java.lang.CharSequence value) {
    this.companyName = value;
  }

  /**
   * Gets the value of the 'position' field.
   * @return The value of the 'position' field.
   */
  public java.lang.Integer getPosition() {
    return position;
  }

  /**
   * Sets the value of the 'position' field.
   * @param value the value to set.
   */
  public void setPosition(java.lang.Integer value) {
    this.position = value;
  }

  /**
   * Gets the value of the 'createDateTime' field.
   * @return The value of the 'createDateTime' field.
   */
  public java.lang.Integer getCreateDateTime() {
    return createDateTime;
  }

  /**
   * Sets the value of the 'createDateTime' field.
   * @param value the value to set.
   */
  public void setCreateDateTime(java.lang.Integer value) {
    this.createDateTime = value;
  }

  /**
   * Gets the value of the 'createdDateTime' field.
   * @return The value of the 'createdDateTime' field.
   */
  public java.lang.Integer getCreatedDateTime() {
    return createdDateTime;
  }

  /**
   * Sets the value of the 'createdDateTime' field.
   * @param value the value to set.
   */
  public void setCreatedDateTime(java.lang.Integer value) {
    this.createdDateTime = value;
  }

  /**
   * Gets the value of the 'documentId' field.
   * @return The value of the 'documentId' field.
   */
  public java.lang.CharSequence getDocumentId() {
    return documentId;
  }

  /**
   * Sets the value of the 'documentId' field.
   * @param value the value to set.
   */
  public void setDocumentId(java.lang.CharSequence value) {
    this.documentId = value;
  }

  /**
   * Gets the value of the 'eventType' field.
   * @return The value of the 'eventType' field.
   */
  public java.lang.CharSequence getEventType() {
    return eventType;
  }

  /**
   * Sets the value of the 'eventType' field.
   * @param value the value to set.
   */
  public void setEventType(java.lang.CharSequence value) {
    this.eventType = value;
  }

  /**
   * Gets the value of the 'indexType' field.
   * @return The value of the 'indexType' field.
   */
  public java.lang.CharSequence getIndexType() {
    return indexType;
  }

  /**
   * Sets the value of the 'indexType' field.
   * @param value the value to set.
   */
  public void setIndexType(java.lang.CharSequence value) {
    this.indexType = value;
  }

  /**
   * Gets the value of the 'ip' field.
   * @return The value of the 'ip' field.
   */
  public java.lang.CharSequence getIp() {
    return ip;
  }

  /**
   * Sets the value of the 'ip' field.
   * @param value the value to set.
   */
  public void setIp(java.lang.CharSequence value) {
    this.ip = value;
  }

  /**
   * Gets the value of the 'isAd' field.
   * @return The value of the 'isAd' field.
   */
  public java.lang.Boolean getIsAd() {
    return isAd;
  }

  /**
   * Sets the value of the 'isAd' field.
   * @param value the value to set.
   */
  public void setIsAd(java.lang.Boolean value) {
    this.isAd = value;
  }

  /**
   * Gets the value of the 'jobContent' field.
   * @return The value of the 'jobContent' field.
   */
  public java.lang.CharSequence getJobContent() {
    return jobContent;
  }

  /**
   * Sets the value of the 'jobContent' field.
   * @param value the value to set.
   */
  public void setJobContent(java.lang.CharSequence value) {
    this.jobContent = value;
  }

  /**
   * Gets the value of the 'jobTitle' field.
   * @return The value of the 'jobTitle' field.
   */
  public java.lang.CharSequence getJobTitle() {
    return jobTitle;
  }

  /**
   * Sets the value of the 'jobTitle' field.
   * @param value the value to set.
   */
  public void setJobTitle(java.lang.CharSequence value) {
    this.jobTitle = value;
  }

  /**
   * Gets the value of the 'jobType' field.
   * @return The value of the 'jobType' field.
   */
  public java.lang.CharSequence getJobType() {
    return jobType;
  }

  /**
   * Sets the value of the 'jobType' field.
   * @param value the value to set.
   */
  public void setJobType(java.lang.CharSequence value) {
    this.jobType = value;
  }

  /**
   * Gets the value of the 'jobVersionDate' field.
   * @return The value of the 'jobVersionDate' field.
   */
  public java.lang.Integer getJobVersionDate() {
    return jobVersionDate;
  }

  /**
   * Sets the value of the 'jobVersionDate' field.
   * @param value the value to set.
   */
  public void setJobVersionDate(java.lang.Integer value) {
    this.jobVersionDate = value;
  }

  /**
   * Gets the value of the 'keyword' field.
   * @return The value of the 'keyword' field.
   */
  public java.lang.CharSequence getKeyword() {
    return keyword;
  }

  /**
   * Sets the value of the 'keyword' field.
   * @param value the value to set.
   */
  public void setKeyword(java.lang.CharSequence value) {
    this.keyword = value;
  }

  /**
   * Gets the value of the 'location' field.
   * @return The value of the 'location' field.
   */
  public java.lang.CharSequence getLocation() {
    return location;
  }

  /**
   * Sets the value of the 'location' field.
   * @param value the value to set.
   */
  public void setLocation(java.lang.CharSequence value) {
    this.location = value;
  }

  /**
   * Gets the value of the 'log_host' field.
   * @return The value of the 'log_host' field.
   */
  public java.lang.Boolean getLogHost() {
    return log_host;
  }

  /**
   * Sets the value of the 'log_host' field.
   * @param value the value to set.
   */
  public void setLogHost(java.lang.Boolean value) {
    this.log_host = value;
  }

  /**
   * Gets the value of the 'newJobs' field.
   * @return The value of the 'newJobs' field.
   */
  public java.lang.CharSequence getNewJobs() {
    return newJobs;
  }

  /**
   * Sets the value of the 'newJobs' field.
   * @param value the value to set.
   */
  public void setNewJobs(java.lang.CharSequence value) {
    this.newJobs = value;
  }

  /**
   * Gets the value of the 'openDate' field.
   * @return The value of the 'openDate' field.
   */
  public java.lang.Integer getOpenDate() {
    return openDate;
  }

  /**
   * Sets the value of the 'openDate' field.
   * @param value the value to set.
   */
  public void setOpenDate(java.lang.Integer value) {
    this.openDate = value;
  }

  /**
   * Gets the value of the 'order' field.
   * @return The value of the 'order' field.
   */
  public java.lang.Integer getOrder() {
    return order;
  }

  /**
   * Sets the value of the 'order' field.
   * @param value the value to set.
   */
  public void setOrder(java.lang.Integer value) {
    this.order = value;
  }

  /**
   * Gets the value of the 'originDocumentId' field.
   * @return The value of the 'originDocumentId' field.
   */
  public java.lang.CharSequence getOriginDocumentId() {
    return originDocumentId;
  }

  /**
   * Sets the value of the 'originDocumentId' field.
   * @param value the value to set.
   */
  public void setOriginDocumentId(java.lang.CharSequence value) {
    this.originDocumentId = value;
  }

  /**
   * Gets the value of the 'originalKeyword' field.
   * @return The value of the 'originalKeyword' field.
   */
  public java.lang.CharSequence getOriginalKeyword() {
    return originalKeyword;
  }

  /**
   * Sets the value of the 'originalKeyword' field.
   * @param value the value to set.
   */
  public void setOriginalKeyword(java.lang.CharSequence value) {
    this.originalKeyword = value;
  }

  /**
   * Gets the value of the 'referer' field.
   * @return The value of the 'referer' field.
   */
  public java.lang.CharSequence getReferer() {
    return referer;
  }

  /**
   * Sets the value of the 'referer' field.
   * @param value the value to set.
   */
  public void setReferer(java.lang.CharSequence value) {
    this.referer = value;
  }

  /**
   * Gets the value of the 'relatedJobs' field.
   * @return The value of the 'relatedJobs' field.
   */
  public java.lang.CharSequence getRelatedJobs() {
    return relatedJobs;
  }

  /**
   * Sets the value of the 'relatedJobs' field.
   * @param value the value to set.
   */
  public void setRelatedJobs(java.lang.CharSequence value) {
    this.relatedJobs = value;
  }

  /**
   * Gets the value of the 'role' field.
   * @return The value of the 'role' field.
   */
  public java.lang.CharSequence getRole() {
    return role;
  }

  /**
   * Sets the value of the 'role' field.
   * @param value the value to set.
   */
  public void setRole(java.lang.CharSequence value) {
    this.role = value;
  }

  /**
   * Gets the value of the 'salary' field.
   * @return The value of the 'salary' field.
   */
  public java.lang.CharSequence getSalary() {
    return salary;
  }

  /**
   * Sets the value of the 'salary' field.
   * @param value the value to set.
   */
  public void setSalary(java.lang.CharSequence value) {
    this.salary = value;
  }

  /**
   * Gets the value of the 'searchPage' field.
   * @return The value of the 'searchPage' field.
   */
  public java.lang.CharSequence getSearchPage() {
    return searchPage;
  }

  /**
   * Sets the value of the 'searchPage' field.
   * @param value the value to set.
   */
  public void setSearchPage(java.lang.CharSequence value) {
    this.searchPage = value;
  }

  /**
   * Gets the value of the 'searchRequestId' field.
   * @return The value of the 'searchRequestId' field.
   */
  public java.lang.CharSequence getSearchRequestId() {
    return searchRequestId;
  }

  /**
   * Sets the value of the 'searchRequestId' field.
   * @param value the value to set.
   */
  public void setSearchRequestId(java.lang.CharSequence value) {
    this.searchRequestId = value;
  }

  /**
   * Gets the value of the 'searchRequestUrl' field.
   * @return The value of the 'searchRequestUrl' field.
   */
  public java.lang.CharSequence getSearchRequestUrl() {
    return searchRequestUrl;
  }

  /**
   * Sets the value of the 'searchRequestUrl' field.
   * @param value the value to set.
   */
  public void setSearchRequestUrl(java.lang.CharSequence value) {
    this.searchRequestUrl = value;
  }

  /**
   * Gets the value of the 'siteCodes' field.
   * @return The value of the 'siteCodes' field.
   */
  public java.lang.CharSequence getSiteCodes() {
    return siteCodes;
  }

  /**
   * Sets the value of the 'siteCodes' field.
   * @param value the value to set.
   */
  public void setSiteCodes(java.lang.CharSequence value) {
    this.siteCodes = value;
  }

  /**
   * Gets the value of the 'siteName' field.
   * @return The value of the 'siteName' field.
   */
  public java.lang.CharSequence getSiteName() {
    return siteName;
  }

  /**
   * Sets the value of the 'siteName' field.
   * @param value the value to set.
   */
  public void setSiteName(java.lang.CharSequence value) {
    this.siteName = value;
  }

  /**
   * Gets the value of the 'tag' field.
   * @return The value of the 'tag' field.
   */
  public java.lang.CharSequence getTag() {
    return tag;
  }

  /**
   * Sets the value of the 'tag' field.
   * @param value the value to set.
   */
  public void setTag(java.lang.CharSequence value) {
    this.tag = value;
  }

  /**
   * Gets the value of the 'time' field.
   * @return The value of the 'time' field.
   */
  public java.lang.Integer getTime() {
    return time;
  }

  /**
   * Sets the value of the 'time' field.
   * @param value the value to set.
   */
  public void setTime(java.lang.Integer value) {
    this.time = value;
  }

  /**
   * Gets the value of the 'totalHits' field.
   * @return The value of the 'totalHits' field.
   */
  public java.lang.Integer getTotalHits() {
    return totalHits;
  }

  /**
   * Sets the value of the 'totalHits' field.
   * @param value the value to set.
   */
  public void setTotalHits(java.lang.Integer value) {
    this.totalHits = value;
  }

  /**
   * Gets the value of the 'uaCategory' field.
   * @return The value of the 'uaCategory' field.
   */
  public java.lang.CharSequence getUaCategory() {
    return uaCategory;
  }

  /**
   * Sets the value of the 'uaCategory' field.
   * @param value the value to set.
   */
  public void setUaCategory(java.lang.CharSequence value) {
    this.uaCategory = value;
  }

  /**
   * Gets the value of the 'uaValue' field.
   * @return The value of the 'uaValue' field.
   */
  public java.lang.CharSequence getUaValue() {
    return uaValue;
  }

  /**
   * Sets the value of the 'uaValue' field.
   * @param value the value to set.
   */
  public void setUaValue(java.lang.CharSequence value) {
    this.uaValue = value;
  }

  /**
   * Gets the value of the 'uid' field.
   * @return The value of the 'uid' field.
   */
  public java.lang.CharSequence getUid() {
    return uid;
  }

  /**
   * Sets the value of the 'uid' field.
   * @param value the value to set.
   */
  public void setUid(java.lang.CharSequence value) {
    this.uid = value;
  }

  /**
   * Gets the value of the 'updateDate' field.
   * @return The value of the 'updateDate' field.
   */
  public java.lang.Integer getUpdateDate() {
    return updateDate;
  }

  /**
   * Sets the value of the 'updateDate' field.
   * @param value the value to set.
   */
  public void setUpdateDate(java.lang.Integer value) {
    this.updateDate = value;
  }

  /**
   * Gets the value of the 'visitId' field.
   * @return The value of the 'visitId' field.
   */
  public java.lang.CharSequence getVisitId() {
    return visitId;
  }

  /**
   * Sets the value of the 'visitId' field.
   * @param value the value to set.
   */
  public void setVisitId(java.lang.CharSequence value) {
    this.visitId = value;
  }

  /**
   * Gets the value of the 'workLocation' field.
   * @return The value of the 'workLocation' field.
   */
  public java.lang.CharSequence getWorkLocation() {
    return workLocation;
  }

  /**
   * Sets the value of the 'workLocation' field.
   * @param value the value to set.
   */
  public void setWorkLocation(java.lang.CharSequence value) {
    this.workLocation = value;
  }

  /**
   * Creates a new JseTracker RecordBuilder.
   * @return A new JseTracker RecordBuilder
   */
  public static inc.stanby.schema.JseTracker.Builder newBuilder() {
    return new inc.stanby.schema.JseTracker.Builder();
  }

  /**
   * Creates a new JseTracker RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new JseTracker RecordBuilder
   */
  public static inc.stanby.schema.JseTracker.Builder newBuilder(inc.stanby.schema.JseTracker.Builder other) {
    return new inc.stanby.schema.JseTracker.Builder(other);
  }

  /**
   * Creates a new JseTracker RecordBuilder by copying an existing JseTracker instance.
   * @param other The existing instance to copy.
   * @return A new JseTracker RecordBuilder
   */
  public static inc.stanby.schema.JseTracker.Builder newBuilder(inc.stanby.schema.JseTracker other) {
    return new inc.stanby.schema.JseTracker.Builder(other);
  }

  /**
   * RecordBuilder for JseTracker instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<JseTracker>
    implements org.apache.avro.data.RecordBuilder<JseTracker> {

    private java.lang.CharSequence adDistributionId;
    private java.lang.CharSequence adJobs;
    private java.lang.CharSequence adRequestId;
    private inc.stanby.schema.Address address;
    private inc.stanby.schema.Address.Builder addressBuilder;
    private java.lang.CharSequence bucketType;
    private java.lang.CharSequence category;
    private java.lang.CharSequence clickId;
    private java.lang.CharSequence companyName;
    private int position;
    private int createDateTime;
    private int createdDateTime;
    private java.lang.CharSequence documentId;
    private java.lang.CharSequence eventType;
    private java.lang.CharSequence indexType;
    private java.lang.CharSequence ip;
    private boolean isAd;
    private java.lang.CharSequence jobContent;
    private java.lang.CharSequence jobTitle;
    private java.lang.CharSequence jobType;
    private int jobVersionDate;
    private java.lang.CharSequence keyword;
    private java.lang.CharSequence location;
    private boolean log_host;
    private java.lang.CharSequence newJobs;
    private int openDate;
    private int order;
    private java.lang.CharSequence originDocumentId;
    private java.lang.CharSequence originalKeyword;
    private java.lang.CharSequence referer;
    private java.lang.CharSequence relatedJobs;
    private java.lang.CharSequence role;
    private java.lang.CharSequence salary;
    private java.lang.CharSequence searchPage;
    private java.lang.CharSequence searchRequestId;
    private java.lang.CharSequence searchRequestUrl;
    private java.lang.CharSequence siteCodes;
    private java.lang.CharSequence siteName;
    private java.lang.CharSequence tag;
    private int time;
    private int totalHits;
    private java.lang.CharSequence uaCategory;
    private java.lang.CharSequence uaValue;
    private java.lang.CharSequence uid;
    private int updateDate;
    private java.lang.CharSequence visitId;
    private java.lang.CharSequence workLocation;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(inc.stanby.schema.JseTracker.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.adDistributionId)) {
        this.adDistributionId = data().deepCopy(fields()[0].schema(), other.adDistributionId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.adJobs)) {
        this.adJobs = data().deepCopy(fields()[1].schema(), other.adJobs);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.adRequestId)) {
        this.adRequestId = data().deepCopy(fields()[2].schema(), other.adRequestId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.address)) {
        this.address = data().deepCopy(fields()[3].schema(), other.address);
        fieldSetFlags()[3] = true;
      }
      if (other.hasAddressBuilder()) {
        this.addressBuilder = inc.stanby.schema.Address.newBuilder(other.getAddressBuilder());
      }
      if (isValidValue(fields()[4], other.bucketType)) {
        this.bucketType = data().deepCopy(fields()[4].schema(), other.bucketType);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.category)) {
        this.category = data().deepCopy(fields()[5].schema(), other.category);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.clickId)) {
        this.clickId = data().deepCopy(fields()[6].schema(), other.clickId);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.companyName)) {
        this.companyName = data().deepCopy(fields()[7].schema(), other.companyName);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.position)) {
        this.position = data().deepCopy(fields()[8].schema(), other.position);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.createDateTime)) {
        this.createDateTime = data().deepCopy(fields()[9].schema(), other.createDateTime);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.createdDateTime)) {
        this.createdDateTime = data().deepCopy(fields()[10].schema(), other.createdDateTime);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.documentId)) {
        this.documentId = data().deepCopy(fields()[11].schema(), other.documentId);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.eventType)) {
        this.eventType = data().deepCopy(fields()[12].schema(), other.eventType);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.indexType)) {
        this.indexType = data().deepCopy(fields()[13].schema(), other.indexType);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.ip)) {
        this.ip = data().deepCopy(fields()[14].schema(), other.ip);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.isAd)) {
        this.isAd = data().deepCopy(fields()[15].schema(), other.isAd);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.jobContent)) {
        this.jobContent = data().deepCopy(fields()[16].schema(), other.jobContent);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.jobTitle)) {
        this.jobTitle = data().deepCopy(fields()[17].schema(), other.jobTitle);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.jobType)) {
        this.jobType = data().deepCopy(fields()[18].schema(), other.jobType);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.jobVersionDate)) {
        this.jobVersionDate = data().deepCopy(fields()[19].schema(), other.jobVersionDate);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.keyword)) {
        this.keyword = data().deepCopy(fields()[20].schema(), other.keyword);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.location)) {
        this.location = data().deepCopy(fields()[21].schema(), other.location);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.log_host)) {
        this.log_host = data().deepCopy(fields()[22].schema(), other.log_host);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.newJobs)) {
        this.newJobs = data().deepCopy(fields()[23].schema(), other.newJobs);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.openDate)) {
        this.openDate = data().deepCopy(fields()[24].schema(), other.openDate);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.order)) {
        this.order = data().deepCopy(fields()[25].schema(), other.order);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.originDocumentId)) {
        this.originDocumentId = data().deepCopy(fields()[26].schema(), other.originDocumentId);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.originalKeyword)) {
        this.originalKeyword = data().deepCopy(fields()[27].schema(), other.originalKeyword);
        fieldSetFlags()[27] = true;
      }
      if (isValidValue(fields()[28], other.referer)) {
        this.referer = data().deepCopy(fields()[28].schema(), other.referer);
        fieldSetFlags()[28] = true;
      }
      if (isValidValue(fields()[29], other.relatedJobs)) {
        this.relatedJobs = data().deepCopy(fields()[29].schema(), other.relatedJobs);
        fieldSetFlags()[29] = true;
      }
      if (isValidValue(fields()[30], other.role)) {
        this.role = data().deepCopy(fields()[30].schema(), other.role);
        fieldSetFlags()[30] = true;
      }
      if (isValidValue(fields()[31], other.salary)) {
        this.salary = data().deepCopy(fields()[31].schema(), other.salary);
        fieldSetFlags()[31] = true;
      }
      if (isValidValue(fields()[32], other.searchPage)) {
        this.searchPage = data().deepCopy(fields()[32].schema(), other.searchPage);
        fieldSetFlags()[32] = true;
      }
      if (isValidValue(fields()[33], other.searchRequestId)) {
        this.searchRequestId = data().deepCopy(fields()[33].schema(), other.searchRequestId);
        fieldSetFlags()[33] = true;
      }
      if (isValidValue(fields()[34], other.searchRequestUrl)) {
        this.searchRequestUrl = data().deepCopy(fields()[34].schema(), other.searchRequestUrl);
        fieldSetFlags()[34] = true;
      }
      if (isValidValue(fields()[35], other.siteCodes)) {
        this.siteCodes = data().deepCopy(fields()[35].schema(), other.siteCodes);
        fieldSetFlags()[35] = true;
      }
      if (isValidValue(fields()[36], other.siteName)) {
        this.siteName = data().deepCopy(fields()[36].schema(), other.siteName);
        fieldSetFlags()[36] = true;
      }
      if (isValidValue(fields()[37], other.tag)) {
        this.tag = data().deepCopy(fields()[37].schema(), other.tag);
        fieldSetFlags()[37] = true;
      }
      if (isValidValue(fields()[38], other.time)) {
        this.time = data().deepCopy(fields()[38].schema(), other.time);
        fieldSetFlags()[38] = true;
      }
      if (isValidValue(fields()[39], other.totalHits)) {
        this.totalHits = data().deepCopy(fields()[39].schema(), other.totalHits);
        fieldSetFlags()[39] = true;
      }
      if (isValidValue(fields()[40], other.uaCategory)) {
        this.uaCategory = data().deepCopy(fields()[40].schema(), other.uaCategory);
        fieldSetFlags()[40] = true;
      }
      if (isValidValue(fields()[41], other.uaValue)) {
        this.uaValue = data().deepCopy(fields()[41].schema(), other.uaValue);
        fieldSetFlags()[41] = true;
      }
      if (isValidValue(fields()[42], other.uid)) {
        this.uid = data().deepCopy(fields()[42].schema(), other.uid);
        fieldSetFlags()[42] = true;
      }
      if (isValidValue(fields()[43], other.updateDate)) {
        this.updateDate = data().deepCopy(fields()[43].schema(), other.updateDate);
        fieldSetFlags()[43] = true;
      }
      if (isValidValue(fields()[44], other.visitId)) {
        this.visitId = data().deepCopy(fields()[44].schema(), other.visitId);
        fieldSetFlags()[44] = true;
      }
      if (isValidValue(fields()[45], other.workLocation)) {
        this.workLocation = data().deepCopy(fields()[45].schema(), other.workLocation);
        fieldSetFlags()[45] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing JseTracker instance
     * @param other The existing instance to copy.
     */
    private Builder(inc.stanby.schema.JseTracker other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.adDistributionId)) {
        this.adDistributionId = data().deepCopy(fields()[0].schema(), other.adDistributionId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.adJobs)) {
        this.adJobs = data().deepCopy(fields()[1].schema(), other.adJobs);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.adRequestId)) {
        this.adRequestId = data().deepCopy(fields()[2].schema(), other.adRequestId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.address)) {
        this.address = data().deepCopy(fields()[3].schema(), other.address);
        fieldSetFlags()[3] = true;
      }
      this.addressBuilder = null;
      if (isValidValue(fields()[4], other.bucketType)) {
        this.bucketType = data().deepCopy(fields()[4].schema(), other.bucketType);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.category)) {
        this.category = data().deepCopy(fields()[5].schema(), other.category);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.clickId)) {
        this.clickId = data().deepCopy(fields()[6].schema(), other.clickId);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.companyName)) {
        this.companyName = data().deepCopy(fields()[7].schema(), other.companyName);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.position)) {
        this.position = data().deepCopy(fields()[8].schema(), other.position);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.createDateTime)) {
        this.createDateTime = data().deepCopy(fields()[9].schema(), other.createDateTime);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.createdDateTime)) {
        this.createdDateTime = data().deepCopy(fields()[10].schema(), other.createdDateTime);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.documentId)) {
        this.documentId = data().deepCopy(fields()[11].schema(), other.documentId);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.eventType)) {
        this.eventType = data().deepCopy(fields()[12].schema(), other.eventType);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.indexType)) {
        this.indexType = data().deepCopy(fields()[13].schema(), other.indexType);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.ip)) {
        this.ip = data().deepCopy(fields()[14].schema(), other.ip);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.isAd)) {
        this.isAd = data().deepCopy(fields()[15].schema(), other.isAd);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.jobContent)) {
        this.jobContent = data().deepCopy(fields()[16].schema(), other.jobContent);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.jobTitle)) {
        this.jobTitle = data().deepCopy(fields()[17].schema(), other.jobTitle);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.jobType)) {
        this.jobType = data().deepCopy(fields()[18].schema(), other.jobType);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.jobVersionDate)) {
        this.jobVersionDate = data().deepCopy(fields()[19].schema(), other.jobVersionDate);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.keyword)) {
        this.keyword = data().deepCopy(fields()[20].schema(), other.keyword);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.location)) {
        this.location = data().deepCopy(fields()[21].schema(), other.location);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.log_host)) {
        this.log_host = data().deepCopy(fields()[22].schema(), other.log_host);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.newJobs)) {
        this.newJobs = data().deepCopy(fields()[23].schema(), other.newJobs);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.openDate)) {
        this.openDate = data().deepCopy(fields()[24].schema(), other.openDate);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.order)) {
        this.order = data().deepCopy(fields()[25].schema(), other.order);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.originDocumentId)) {
        this.originDocumentId = data().deepCopy(fields()[26].schema(), other.originDocumentId);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.originalKeyword)) {
        this.originalKeyword = data().deepCopy(fields()[27].schema(), other.originalKeyword);
        fieldSetFlags()[27] = true;
      }
      if (isValidValue(fields()[28], other.referer)) {
        this.referer = data().deepCopy(fields()[28].schema(), other.referer);
        fieldSetFlags()[28] = true;
      }
      if (isValidValue(fields()[29], other.relatedJobs)) {
        this.relatedJobs = data().deepCopy(fields()[29].schema(), other.relatedJobs);
        fieldSetFlags()[29] = true;
      }
      if (isValidValue(fields()[30], other.role)) {
        this.role = data().deepCopy(fields()[30].schema(), other.role);
        fieldSetFlags()[30] = true;
      }
      if (isValidValue(fields()[31], other.salary)) {
        this.salary = data().deepCopy(fields()[31].schema(), other.salary);
        fieldSetFlags()[31] = true;
      }
      if (isValidValue(fields()[32], other.searchPage)) {
        this.searchPage = data().deepCopy(fields()[32].schema(), other.searchPage);
        fieldSetFlags()[32] = true;
      }
      if (isValidValue(fields()[33], other.searchRequestId)) {
        this.searchRequestId = data().deepCopy(fields()[33].schema(), other.searchRequestId);
        fieldSetFlags()[33] = true;
      }
      if (isValidValue(fields()[34], other.searchRequestUrl)) {
        this.searchRequestUrl = data().deepCopy(fields()[34].schema(), other.searchRequestUrl);
        fieldSetFlags()[34] = true;
      }
      if (isValidValue(fields()[35], other.siteCodes)) {
        this.siteCodes = data().deepCopy(fields()[35].schema(), other.siteCodes);
        fieldSetFlags()[35] = true;
      }
      if (isValidValue(fields()[36], other.siteName)) {
        this.siteName = data().deepCopy(fields()[36].schema(), other.siteName);
        fieldSetFlags()[36] = true;
      }
      if (isValidValue(fields()[37], other.tag)) {
        this.tag = data().deepCopy(fields()[37].schema(), other.tag);
        fieldSetFlags()[37] = true;
      }
      if (isValidValue(fields()[38], other.time)) {
        this.time = data().deepCopy(fields()[38].schema(), other.time);
        fieldSetFlags()[38] = true;
      }
      if (isValidValue(fields()[39], other.totalHits)) {
        this.totalHits = data().deepCopy(fields()[39].schema(), other.totalHits);
        fieldSetFlags()[39] = true;
      }
      if (isValidValue(fields()[40], other.uaCategory)) {
        this.uaCategory = data().deepCopy(fields()[40].schema(), other.uaCategory);
        fieldSetFlags()[40] = true;
      }
      if (isValidValue(fields()[41], other.uaValue)) {
        this.uaValue = data().deepCopy(fields()[41].schema(), other.uaValue);
        fieldSetFlags()[41] = true;
      }
      if (isValidValue(fields()[42], other.uid)) {
        this.uid = data().deepCopy(fields()[42].schema(), other.uid);
        fieldSetFlags()[42] = true;
      }
      if (isValidValue(fields()[43], other.updateDate)) {
        this.updateDate = data().deepCopy(fields()[43].schema(), other.updateDate);
        fieldSetFlags()[43] = true;
      }
      if (isValidValue(fields()[44], other.visitId)) {
        this.visitId = data().deepCopy(fields()[44].schema(), other.visitId);
        fieldSetFlags()[44] = true;
      }
      if (isValidValue(fields()[45], other.workLocation)) {
        this.workLocation = data().deepCopy(fields()[45].schema(), other.workLocation);
        fieldSetFlags()[45] = true;
      }
    }

    /**
      * Gets the value of the 'adDistributionId' field.
      * @return The value.
      */
    public java.lang.CharSequence getAdDistributionId() {
      return adDistributionId;
    }

    /**
      * Sets the value of the 'adDistributionId' field.
      * @param value The value of 'adDistributionId'.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder setAdDistributionId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.adDistributionId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'adDistributionId' field has been set.
      * @return True if the 'adDistributionId' field has been set, false otherwise.
      */
    public boolean hasAdDistributionId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'adDistributionId' field.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder clearAdDistributionId() {
      adDistributionId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'adJobs' field.
      * @return The value.
      */
    public java.lang.CharSequence getAdJobs() {
      return adJobs;
    }

    /**
      * Sets the value of the 'adJobs' field.
      * @param value The value of 'adJobs'.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder setAdJobs(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.adJobs = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'adJobs' field has been set.
      * @return True if the 'adJobs' field has been set, false otherwise.
      */
    public boolean hasAdJobs() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'adJobs' field.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder clearAdJobs() {
      adJobs = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'adRequestId' field.
      * @return The value.
      */
    public java.lang.CharSequence getAdRequestId() {
      return adRequestId;
    }

    /**
      * Sets the value of the 'adRequestId' field.
      * @param value The value of 'adRequestId'.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder setAdRequestId(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.adRequestId = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'adRequestId' field has been set.
      * @return True if the 'adRequestId' field has been set, false otherwise.
      */
    public boolean hasAdRequestId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'adRequestId' field.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder clearAdRequestId() {
      adRequestId = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'address' field.
      * @return The value.
      */
    public inc.stanby.schema.Address getAddress() {
      return address;
    }

    /**
      * Sets the value of the 'address' field.
      * @param value The value of 'address'.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder setAddress(inc.stanby.schema.Address value) {
      validate(fields()[3], value);
      this.addressBuilder = null;
      this.address = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'address' field has been set.
      * @return True if the 'address' field has been set, false otherwise.
      */
    public boolean hasAddress() {
      return fieldSetFlags()[3];
    }

    /**
     * Gets the Builder instance for the 'address' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public inc.stanby.schema.Address.Builder getAddressBuilder() {
      if (addressBuilder == null) {
        if (hasAddress()) {
          setAddressBuilder(inc.stanby.schema.Address.newBuilder(address));
        } else {
          setAddressBuilder(inc.stanby.schema.Address.newBuilder());
        }
      }
      return addressBuilder;
    }

    /**
     * Sets the Builder instance for the 'address' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public inc.stanby.schema.JseTracker.Builder setAddressBuilder(inc.stanby.schema.Address.Builder value) {
      clearAddress();
      addressBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'address' field has an active Builder instance
     * @return True if the 'address' field has an active Builder instance
     */
    public boolean hasAddressBuilder() {
      return addressBuilder != null;
    }

    /**
      * Clears the value of the 'address' field.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder clearAddress() {
      address = null;
      addressBuilder = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'bucketType' field.
      * @return The value.
      */
    public java.lang.CharSequence getBucketType() {
      return bucketType;
    }

    /**
      * Sets the value of the 'bucketType' field.
      * @param value The value of 'bucketType'.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder setBucketType(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.bucketType = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'bucketType' field has been set.
      * @return True if the 'bucketType' field has been set, false otherwise.
      */
    public boolean hasBucketType() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'bucketType' field.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder clearBucketType() {
      bucketType = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'category' field.
      * @return The value.
      */
    public java.lang.CharSequence getCategory() {
      return category;
    }

    /**
      * Sets the value of the 'category' field.
      * @param value The value of 'category'.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder setCategory(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.category = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'category' field has been set.
      * @return True if the 'category' field has been set, false otherwise.
      */
    public boolean hasCategory() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'category' field.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder clearCategory() {
      category = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'clickId' field.
      * @return The value.
      */
    public java.lang.CharSequence getClickId() {
      return clickId;
    }

    /**
      * Sets the value of the 'clickId' field.
      * @param value The value of 'clickId'.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder setClickId(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.clickId = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'clickId' field has been set.
      * @return True if the 'clickId' field has been set, false otherwise.
      */
    public boolean hasClickId() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'clickId' field.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder clearClickId() {
      clickId = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'companyName' field.
      * @return The value.
      */
    public java.lang.CharSequence getCompanyName() {
      return companyName;
    }

    /**
      * Sets the value of the 'companyName' field.
      * @param value The value of 'companyName'.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder setCompanyName(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.companyName = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'companyName' field has been set.
      * @return True if the 'companyName' field has been set, false otherwise.
      */
    public boolean hasCompanyName() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'companyName' field.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder clearCompanyName() {
      companyName = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'position' field.
      * @return The value.
      */
    public java.lang.Integer getPosition() {
      return position;
    }

    /**
      * Sets the value of the 'position' field.
      * @param value The value of 'position'.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder setPosition(int value) {
      validate(fields()[8], value);
      this.position = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'position' field has been set.
      * @return True if the 'position' field has been set, false otherwise.
      */
    public boolean hasPosition() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'position' field.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder clearPosition() {
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'createDateTime' field.
      * @return The value.
      */
    public java.lang.Integer getCreateDateTime() {
      return createDateTime;
    }

    /**
      * Sets the value of the 'createDateTime' field.
      * @param value The value of 'createDateTime'.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder setCreateDateTime(int value) {
      validate(fields()[9], value);
      this.createDateTime = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'createDateTime' field has been set.
      * @return True if the 'createDateTime' field has been set, false otherwise.
      */
    public boolean hasCreateDateTime() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'createDateTime' field.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder clearCreateDateTime() {
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'createdDateTime' field.
      * @return The value.
      */
    public java.lang.Integer getCreatedDateTime() {
      return createdDateTime;
    }

    /**
      * Sets the value of the 'createdDateTime' field.
      * @param value The value of 'createdDateTime'.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder setCreatedDateTime(int value) {
      validate(fields()[10], value);
      this.createdDateTime = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'createdDateTime' field has been set.
      * @return True if the 'createdDateTime' field has been set, false otherwise.
      */
    public boolean hasCreatedDateTime() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'createdDateTime' field.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder clearCreatedDateTime() {
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'documentId' field.
      * @return The value.
      */
    public java.lang.CharSequence getDocumentId() {
      return documentId;
    }

    /**
      * Sets the value of the 'documentId' field.
      * @param value The value of 'documentId'.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder setDocumentId(java.lang.CharSequence value) {
      validate(fields()[11], value);
      this.documentId = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'documentId' field has been set.
      * @return True if the 'documentId' field has been set, false otherwise.
      */
    public boolean hasDocumentId() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'documentId' field.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder clearDocumentId() {
      documentId = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'eventType' field.
      * @return The value.
      */
    public java.lang.CharSequence getEventType() {
      return eventType;
    }

    /**
      * Sets the value of the 'eventType' field.
      * @param value The value of 'eventType'.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder setEventType(java.lang.CharSequence value) {
      validate(fields()[12], value);
      this.eventType = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'eventType' field has been set.
      * @return True if the 'eventType' field has been set, false otherwise.
      */
    public boolean hasEventType() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'eventType' field.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder clearEventType() {
      eventType = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'indexType' field.
      * @return The value.
      */
    public java.lang.CharSequence getIndexType() {
      return indexType;
    }

    /**
      * Sets the value of the 'indexType' field.
      * @param value The value of 'indexType'.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder setIndexType(java.lang.CharSequence value) {
      validate(fields()[13], value);
      this.indexType = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'indexType' field has been set.
      * @return True if the 'indexType' field has been set, false otherwise.
      */
    public boolean hasIndexType() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'indexType' field.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder clearIndexType() {
      indexType = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'ip' field.
      * @return The value.
      */
    public java.lang.CharSequence getIp() {
      return ip;
    }

    /**
      * Sets the value of the 'ip' field.
      * @param value The value of 'ip'.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder setIp(java.lang.CharSequence value) {
      validate(fields()[14], value);
      this.ip = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'ip' field has been set.
      * @return True if the 'ip' field has been set, false otherwise.
      */
    public boolean hasIp() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'ip' field.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder clearIp() {
      ip = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'isAd' field.
      * @return The value.
      */
    public java.lang.Boolean getIsAd() {
      return isAd;
    }

    /**
      * Sets the value of the 'isAd' field.
      * @param value The value of 'isAd'.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder setIsAd(boolean value) {
      validate(fields()[15], value);
      this.isAd = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'isAd' field has been set.
      * @return True if the 'isAd' field has been set, false otherwise.
      */
    public boolean hasIsAd() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'isAd' field.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder clearIsAd() {
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'jobContent' field.
      * @return The value.
      */
    public java.lang.CharSequence getJobContent() {
      return jobContent;
    }

    /**
      * Sets the value of the 'jobContent' field.
      * @param value The value of 'jobContent'.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder setJobContent(java.lang.CharSequence value) {
      validate(fields()[16], value);
      this.jobContent = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'jobContent' field has been set.
      * @return True if the 'jobContent' field has been set, false otherwise.
      */
    public boolean hasJobContent() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'jobContent' field.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder clearJobContent() {
      jobContent = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'jobTitle' field.
      * @return The value.
      */
    public java.lang.CharSequence getJobTitle() {
      return jobTitle;
    }

    /**
      * Sets the value of the 'jobTitle' field.
      * @param value The value of 'jobTitle'.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder setJobTitle(java.lang.CharSequence value) {
      validate(fields()[17], value);
      this.jobTitle = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'jobTitle' field has been set.
      * @return True if the 'jobTitle' field has been set, false otherwise.
      */
    public boolean hasJobTitle() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'jobTitle' field.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder clearJobTitle() {
      jobTitle = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'jobType' field.
      * @return The value.
      */
    public java.lang.CharSequence getJobType() {
      return jobType;
    }

    /**
      * Sets the value of the 'jobType' field.
      * @param value The value of 'jobType'.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder setJobType(java.lang.CharSequence value) {
      validate(fields()[18], value);
      this.jobType = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'jobType' field has been set.
      * @return True if the 'jobType' field has been set, false otherwise.
      */
    public boolean hasJobType() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'jobType' field.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder clearJobType() {
      jobType = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'jobVersionDate' field.
      * @return The value.
      */
    public java.lang.Integer getJobVersionDate() {
      return jobVersionDate;
    }

    /**
      * Sets the value of the 'jobVersionDate' field.
      * @param value The value of 'jobVersionDate'.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder setJobVersionDate(int value) {
      validate(fields()[19], value);
      this.jobVersionDate = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'jobVersionDate' field has been set.
      * @return True if the 'jobVersionDate' field has been set, false otherwise.
      */
    public boolean hasJobVersionDate() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'jobVersionDate' field.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder clearJobVersionDate() {
      fieldSetFlags()[19] = false;
      return this;
    }

    /**
      * Gets the value of the 'keyword' field.
      * @return The value.
      */
    public java.lang.CharSequence getKeyword() {
      return keyword;
    }

    /**
      * Sets the value of the 'keyword' field.
      * @param value The value of 'keyword'.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder setKeyword(java.lang.CharSequence value) {
      validate(fields()[20], value);
      this.keyword = value;
      fieldSetFlags()[20] = true;
      return this;
    }

    /**
      * Checks whether the 'keyword' field has been set.
      * @return True if the 'keyword' field has been set, false otherwise.
      */
    public boolean hasKeyword() {
      return fieldSetFlags()[20];
    }


    /**
      * Clears the value of the 'keyword' field.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder clearKeyword() {
      keyword = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    /**
      * Gets the value of the 'location' field.
      * @return The value.
      */
    public java.lang.CharSequence getLocation() {
      return location;
    }

    /**
      * Sets the value of the 'location' field.
      * @param value The value of 'location'.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder setLocation(java.lang.CharSequence value) {
      validate(fields()[21], value);
      this.location = value;
      fieldSetFlags()[21] = true;
      return this;
    }

    /**
      * Checks whether the 'location' field has been set.
      * @return True if the 'location' field has been set, false otherwise.
      */
    public boolean hasLocation() {
      return fieldSetFlags()[21];
    }


    /**
      * Clears the value of the 'location' field.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder clearLocation() {
      location = null;
      fieldSetFlags()[21] = false;
      return this;
    }

    /**
      * Gets the value of the 'log_host' field.
      * @return The value.
      */
    public java.lang.Boolean getLogHost() {
      return log_host;
    }

    /**
      * Sets the value of the 'log_host' field.
      * @param value The value of 'log_host'.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder setLogHost(boolean value) {
      validate(fields()[22], value);
      this.log_host = value;
      fieldSetFlags()[22] = true;
      return this;
    }

    /**
      * Checks whether the 'log_host' field has been set.
      * @return True if the 'log_host' field has been set, false otherwise.
      */
    public boolean hasLogHost() {
      return fieldSetFlags()[22];
    }


    /**
      * Clears the value of the 'log_host' field.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder clearLogHost() {
      fieldSetFlags()[22] = false;
      return this;
    }

    /**
      * Gets the value of the 'newJobs' field.
      * @return The value.
      */
    public java.lang.CharSequence getNewJobs() {
      return newJobs;
    }

    /**
      * Sets the value of the 'newJobs' field.
      * @param value The value of 'newJobs'.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder setNewJobs(java.lang.CharSequence value) {
      validate(fields()[23], value);
      this.newJobs = value;
      fieldSetFlags()[23] = true;
      return this;
    }

    /**
      * Checks whether the 'newJobs' field has been set.
      * @return True if the 'newJobs' field has been set, false otherwise.
      */
    public boolean hasNewJobs() {
      return fieldSetFlags()[23];
    }


    /**
      * Clears the value of the 'newJobs' field.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder clearNewJobs() {
      newJobs = null;
      fieldSetFlags()[23] = false;
      return this;
    }

    /**
      * Gets the value of the 'openDate' field.
      * @return The value.
      */
    public java.lang.Integer getOpenDate() {
      return openDate;
    }

    /**
      * Sets the value of the 'openDate' field.
      * @param value The value of 'openDate'.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder setOpenDate(int value) {
      validate(fields()[24], value);
      this.openDate = value;
      fieldSetFlags()[24] = true;
      return this;
    }

    /**
      * Checks whether the 'openDate' field has been set.
      * @return True if the 'openDate' field has been set, false otherwise.
      */
    public boolean hasOpenDate() {
      return fieldSetFlags()[24];
    }


    /**
      * Clears the value of the 'openDate' field.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder clearOpenDate() {
      fieldSetFlags()[24] = false;
      return this;
    }

    /**
      * Gets the value of the 'order' field.
      * @return The value.
      */
    public java.lang.Integer getOrder() {
      return order;
    }

    /**
      * Sets the value of the 'order' field.
      * @param value The value of 'order'.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder setOrder(int value) {
      validate(fields()[25], value);
      this.order = value;
      fieldSetFlags()[25] = true;
      return this;
    }

    /**
      * Checks whether the 'order' field has been set.
      * @return True if the 'order' field has been set, false otherwise.
      */
    public boolean hasOrder() {
      return fieldSetFlags()[25];
    }


    /**
      * Clears the value of the 'order' field.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder clearOrder() {
      fieldSetFlags()[25] = false;
      return this;
    }

    /**
      * Gets the value of the 'originDocumentId' field.
      * @return The value.
      */
    public java.lang.CharSequence getOriginDocumentId() {
      return originDocumentId;
    }

    /**
      * Sets the value of the 'originDocumentId' field.
      * @param value The value of 'originDocumentId'.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder setOriginDocumentId(java.lang.CharSequence value) {
      validate(fields()[26], value);
      this.originDocumentId = value;
      fieldSetFlags()[26] = true;
      return this;
    }

    /**
      * Checks whether the 'originDocumentId' field has been set.
      * @return True if the 'originDocumentId' field has been set, false otherwise.
      */
    public boolean hasOriginDocumentId() {
      return fieldSetFlags()[26];
    }


    /**
      * Clears the value of the 'originDocumentId' field.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder clearOriginDocumentId() {
      originDocumentId = null;
      fieldSetFlags()[26] = false;
      return this;
    }

    /**
      * Gets the value of the 'originalKeyword' field.
      * @return The value.
      */
    public java.lang.CharSequence getOriginalKeyword() {
      return originalKeyword;
    }

    /**
      * Sets the value of the 'originalKeyword' field.
      * @param value The value of 'originalKeyword'.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder setOriginalKeyword(java.lang.CharSequence value) {
      validate(fields()[27], value);
      this.originalKeyword = value;
      fieldSetFlags()[27] = true;
      return this;
    }

    /**
      * Checks whether the 'originalKeyword' field has been set.
      * @return True if the 'originalKeyword' field has been set, false otherwise.
      */
    public boolean hasOriginalKeyword() {
      return fieldSetFlags()[27];
    }


    /**
      * Clears the value of the 'originalKeyword' field.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder clearOriginalKeyword() {
      originalKeyword = null;
      fieldSetFlags()[27] = false;
      return this;
    }

    /**
      * Gets the value of the 'referer' field.
      * @return The value.
      */
    public java.lang.CharSequence getReferer() {
      return referer;
    }

    /**
      * Sets the value of the 'referer' field.
      * @param value The value of 'referer'.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder setReferer(java.lang.CharSequence value) {
      validate(fields()[28], value);
      this.referer = value;
      fieldSetFlags()[28] = true;
      return this;
    }

    /**
      * Checks whether the 'referer' field has been set.
      * @return True if the 'referer' field has been set, false otherwise.
      */
    public boolean hasReferer() {
      return fieldSetFlags()[28];
    }


    /**
      * Clears the value of the 'referer' field.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder clearReferer() {
      referer = null;
      fieldSetFlags()[28] = false;
      return this;
    }

    /**
      * Gets the value of the 'relatedJobs' field.
      * @return The value.
      */
    public java.lang.CharSequence getRelatedJobs() {
      return relatedJobs;
    }

    /**
      * Sets the value of the 'relatedJobs' field.
      * @param value The value of 'relatedJobs'.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder setRelatedJobs(java.lang.CharSequence value) {
      validate(fields()[29], value);
      this.relatedJobs = value;
      fieldSetFlags()[29] = true;
      return this;
    }

    /**
      * Checks whether the 'relatedJobs' field has been set.
      * @return True if the 'relatedJobs' field has been set, false otherwise.
      */
    public boolean hasRelatedJobs() {
      return fieldSetFlags()[29];
    }


    /**
      * Clears the value of the 'relatedJobs' field.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder clearRelatedJobs() {
      relatedJobs = null;
      fieldSetFlags()[29] = false;
      return this;
    }

    /**
      * Gets the value of the 'role' field.
      * @return The value.
      */
    public java.lang.CharSequence getRole() {
      return role;
    }

    /**
      * Sets the value of the 'role' field.
      * @param value The value of 'role'.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder setRole(java.lang.CharSequence value) {
      validate(fields()[30], value);
      this.role = value;
      fieldSetFlags()[30] = true;
      return this;
    }

    /**
      * Checks whether the 'role' field has been set.
      * @return True if the 'role' field has been set, false otherwise.
      */
    public boolean hasRole() {
      return fieldSetFlags()[30];
    }


    /**
      * Clears the value of the 'role' field.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder clearRole() {
      role = null;
      fieldSetFlags()[30] = false;
      return this;
    }

    /**
      * Gets the value of the 'salary' field.
      * @return The value.
      */
    public java.lang.CharSequence getSalary() {
      return salary;
    }

    /**
      * Sets the value of the 'salary' field.
      * @param value The value of 'salary'.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder setSalary(java.lang.CharSequence value) {
      validate(fields()[31], value);
      this.salary = value;
      fieldSetFlags()[31] = true;
      return this;
    }

    /**
      * Checks whether the 'salary' field has been set.
      * @return True if the 'salary' field has been set, false otherwise.
      */
    public boolean hasSalary() {
      return fieldSetFlags()[31];
    }


    /**
      * Clears the value of the 'salary' field.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder clearSalary() {
      salary = null;
      fieldSetFlags()[31] = false;
      return this;
    }

    /**
      * Gets the value of the 'searchPage' field.
      * @return The value.
      */
    public java.lang.CharSequence getSearchPage() {
      return searchPage;
    }

    /**
      * Sets the value of the 'searchPage' field.
      * @param value The value of 'searchPage'.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder setSearchPage(java.lang.CharSequence value) {
      validate(fields()[32], value);
      this.searchPage = value;
      fieldSetFlags()[32] = true;
      return this;
    }

    /**
      * Checks whether the 'searchPage' field has been set.
      * @return True if the 'searchPage' field has been set, false otherwise.
      */
    public boolean hasSearchPage() {
      return fieldSetFlags()[32];
    }


    /**
      * Clears the value of the 'searchPage' field.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder clearSearchPage() {
      searchPage = null;
      fieldSetFlags()[32] = false;
      return this;
    }

    /**
      * Gets the value of the 'searchRequestId' field.
      * @return The value.
      */
    public java.lang.CharSequence getSearchRequestId() {
      return searchRequestId;
    }

    /**
      * Sets the value of the 'searchRequestId' field.
      * @param value The value of 'searchRequestId'.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder setSearchRequestId(java.lang.CharSequence value) {
      validate(fields()[33], value);
      this.searchRequestId = value;
      fieldSetFlags()[33] = true;
      return this;
    }

    /**
      * Checks whether the 'searchRequestId' field has been set.
      * @return True if the 'searchRequestId' field has been set, false otherwise.
      */
    public boolean hasSearchRequestId() {
      return fieldSetFlags()[33];
    }


    /**
      * Clears the value of the 'searchRequestId' field.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder clearSearchRequestId() {
      searchRequestId = null;
      fieldSetFlags()[33] = false;
      return this;
    }

    /**
      * Gets the value of the 'searchRequestUrl' field.
      * @return The value.
      */
    public java.lang.CharSequence getSearchRequestUrl() {
      return searchRequestUrl;
    }

    /**
      * Sets the value of the 'searchRequestUrl' field.
      * @param value The value of 'searchRequestUrl'.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder setSearchRequestUrl(java.lang.CharSequence value) {
      validate(fields()[34], value);
      this.searchRequestUrl = value;
      fieldSetFlags()[34] = true;
      return this;
    }

    /**
      * Checks whether the 'searchRequestUrl' field has been set.
      * @return True if the 'searchRequestUrl' field has been set, false otherwise.
      */
    public boolean hasSearchRequestUrl() {
      return fieldSetFlags()[34];
    }


    /**
      * Clears the value of the 'searchRequestUrl' field.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder clearSearchRequestUrl() {
      searchRequestUrl = null;
      fieldSetFlags()[34] = false;
      return this;
    }

    /**
      * Gets the value of the 'siteCodes' field.
      * @return The value.
      */
    public java.lang.CharSequence getSiteCodes() {
      return siteCodes;
    }

    /**
      * Sets the value of the 'siteCodes' field.
      * @param value The value of 'siteCodes'.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder setSiteCodes(java.lang.CharSequence value) {
      validate(fields()[35], value);
      this.siteCodes = value;
      fieldSetFlags()[35] = true;
      return this;
    }

    /**
      * Checks whether the 'siteCodes' field has been set.
      * @return True if the 'siteCodes' field has been set, false otherwise.
      */
    public boolean hasSiteCodes() {
      return fieldSetFlags()[35];
    }


    /**
      * Clears the value of the 'siteCodes' field.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder clearSiteCodes() {
      siteCodes = null;
      fieldSetFlags()[35] = false;
      return this;
    }

    /**
      * Gets the value of the 'siteName' field.
      * @return The value.
      */
    public java.lang.CharSequence getSiteName() {
      return siteName;
    }

    /**
      * Sets the value of the 'siteName' field.
      * @param value The value of 'siteName'.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder setSiteName(java.lang.CharSequence value) {
      validate(fields()[36], value);
      this.siteName = value;
      fieldSetFlags()[36] = true;
      return this;
    }

    /**
      * Checks whether the 'siteName' field has been set.
      * @return True if the 'siteName' field has been set, false otherwise.
      */
    public boolean hasSiteName() {
      return fieldSetFlags()[36];
    }


    /**
      * Clears the value of the 'siteName' field.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder clearSiteName() {
      siteName = null;
      fieldSetFlags()[36] = false;
      return this;
    }

    /**
      * Gets the value of the 'tag' field.
      * @return The value.
      */
    public java.lang.CharSequence getTag() {
      return tag;
    }

    /**
      * Sets the value of the 'tag' field.
      * @param value The value of 'tag'.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder setTag(java.lang.CharSequence value) {
      validate(fields()[37], value);
      this.tag = value;
      fieldSetFlags()[37] = true;
      return this;
    }

    /**
      * Checks whether the 'tag' field has been set.
      * @return True if the 'tag' field has been set, false otherwise.
      */
    public boolean hasTag() {
      return fieldSetFlags()[37];
    }


    /**
      * Clears the value of the 'tag' field.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder clearTag() {
      tag = null;
      fieldSetFlags()[37] = false;
      return this;
    }

    /**
      * Gets the value of the 'time' field.
      * @return The value.
      */
    public java.lang.Integer getTime() {
      return time;
    }

    /**
      * Sets the value of the 'time' field.
      * @param value The value of 'time'.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder setTime(int value) {
      validate(fields()[38], value);
      this.time = value;
      fieldSetFlags()[38] = true;
      return this;
    }

    /**
      * Checks whether the 'time' field has been set.
      * @return True if the 'time' field has been set, false otherwise.
      */
    public boolean hasTime() {
      return fieldSetFlags()[38];
    }


    /**
      * Clears the value of the 'time' field.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder clearTime() {
      fieldSetFlags()[38] = false;
      return this;
    }

    /**
      * Gets the value of the 'totalHits' field.
      * @return The value.
      */
    public java.lang.Integer getTotalHits() {
      return totalHits;
    }

    /**
      * Sets the value of the 'totalHits' field.
      * @param value The value of 'totalHits'.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder setTotalHits(int value) {
      validate(fields()[39], value);
      this.totalHits = value;
      fieldSetFlags()[39] = true;
      return this;
    }

    /**
      * Checks whether the 'totalHits' field has been set.
      * @return True if the 'totalHits' field has been set, false otherwise.
      */
    public boolean hasTotalHits() {
      return fieldSetFlags()[39];
    }


    /**
      * Clears the value of the 'totalHits' field.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder clearTotalHits() {
      fieldSetFlags()[39] = false;
      return this;
    }

    /**
      * Gets the value of the 'uaCategory' field.
      * @return The value.
      */
    public java.lang.CharSequence getUaCategory() {
      return uaCategory;
    }

    /**
      * Sets the value of the 'uaCategory' field.
      * @param value The value of 'uaCategory'.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder setUaCategory(java.lang.CharSequence value) {
      validate(fields()[40], value);
      this.uaCategory = value;
      fieldSetFlags()[40] = true;
      return this;
    }

    /**
      * Checks whether the 'uaCategory' field has been set.
      * @return True if the 'uaCategory' field has been set, false otherwise.
      */
    public boolean hasUaCategory() {
      return fieldSetFlags()[40];
    }


    /**
      * Clears the value of the 'uaCategory' field.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder clearUaCategory() {
      uaCategory = null;
      fieldSetFlags()[40] = false;
      return this;
    }

    /**
      * Gets the value of the 'uaValue' field.
      * @return The value.
      */
    public java.lang.CharSequence getUaValue() {
      return uaValue;
    }

    /**
      * Sets the value of the 'uaValue' field.
      * @param value The value of 'uaValue'.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder setUaValue(java.lang.CharSequence value) {
      validate(fields()[41], value);
      this.uaValue = value;
      fieldSetFlags()[41] = true;
      return this;
    }

    /**
      * Checks whether the 'uaValue' field has been set.
      * @return True if the 'uaValue' field has been set, false otherwise.
      */
    public boolean hasUaValue() {
      return fieldSetFlags()[41];
    }


    /**
      * Clears the value of the 'uaValue' field.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder clearUaValue() {
      uaValue = null;
      fieldSetFlags()[41] = false;
      return this;
    }

    /**
      * Gets the value of the 'uid' field.
      * @return The value.
      */
    public java.lang.CharSequence getUid() {
      return uid;
    }

    /**
      * Sets the value of the 'uid' field.
      * @param value The value of 'uid'.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder setUid(java.lang.CharSequence value) {
      validate(fields()[42], value);
      this.uid = value;
      fieldSetFlags()[42] = true;
      return this;
    }

    /**
      * Checks whether the 'uid' field has been set.
      * @return True if the 'uid' field has been set, false otherwise.
      */
    public boolean hasUid() {
      return fieldSetFlags()[42];
    }


    /**
      * Clears the value of the 'uid' field.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder clearUid() {
      uid = null;
      fieldSetFlags()[42] = false;
      return this;
    }

    /**
      * Gets the value of the 'updateDate' field.
      * @return The value.
      */
    public java.lang.Integer getUpdateDate() {
      return updateDate;
    }

    /**
      * Sets the value of the 'updateDate' field.
      * @param value The value of 'updateDate'.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder setUpdateDate(int value) {
      validate(fields()[43], value);
      this.updateDate = value;
      fieldSetFlags()[43] = true;
      return this;
    }

    /**
      * Checks whether the 'updateDate' field has been set.
      * @return True if the 'updateDate' field has been set, false otherwise.
      */
    public boolean hasUpdateDate() {
      return fieldSetFlags()[43];
    }


    /**
      * Clears the value of the 'updateDate' field.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder clearUpdateDate() {
      fieldSetFlags()[43] = false;
      return this;
    }

    /**
      * Gets the value of the 'visitId' field.
      * @return The value.
      */
    public java.lang.CharSequence getVisitId() {
      return visitId;
    }

    /**
      * Sets the value of the 'visitId' field.
      * @param value The value of 'visitId'.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder setVisitId(java.lang.CharSequence value) {
      validate(fields()[44], value);
      this.visitId = value;
      fieldSetFlags()[44] = true;
      return this;
    }

    /**
      * Checks whether the 'visitId' field has been set.
      * @return True if the 'visitId' field has been set, false otherwise.
      */
    public boolean hasVisitId() {
      return fieldSetFlags()[44];
    }


    /**
      * Clears the value of the 'visitId' field.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder clearVisitId() {
      visitId = null;
      fieldSetFlags()[44] = false;
      return this;
    }

    /**
      * Gets the value of the 'workLocation' field.
      * @return The value.
      */
    public java.lang.CharSequence getWorkLocation() {
      return workLocation;
    }

    /**
      * Sets the value of the 'workLocation' field.
      * @param value The value of 'workLocation'.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder setWorkLocation(java.lang.CharSequence value) {
      validate(fields()[45], value);
      this.workLocation = value;
      fieldSetFlags()[45] = true;
      return this;
    }

    /**
      * Checks whether the 'workLocation' field has been set.
      * @return True if the 'workLocation' field has been set, false otherwise.
      */
    public boolean hasWorkLocation() {
      return fieldSetFlags()[45];
    }


    /**
      * Clears the value of the 'workLocation' field.
      * @return This builder.
      */
    public inc.stanby.schema.JseTracker.Builder clearWorkLocation() {
      workLocation = null;
      fieldSetFlags()[45] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public JseTracker build() {
      try {
        JseTracker record = new JseTracker();
        record.adDistributionId = fieldSetFlags()[0] ? this.adDistributionId : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.adJobs = fieldSetFlags()[1] ? this.adJobs : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.adRequestId = fieldSetFlags()[2] ? this.adRequestId : (java.lang.CharSequence) defaultValue(fields()[2]);
        if (addressBuilder != null) {
          record.address = this.addressBuilder.build();
        } else {
          record.address = fieldSetFlags()[3] ? this.address : (inc.stanby.schema.Address) defaultValue(fields()[3]);
        }
        record.bucketType = fieldSetFlags()[4] ? this.bucketType : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.category = fieldSetFlags()[5] ? this.category : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.clickId = fieldSetFlags()[6] ? this.clickId : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.companyName = fieldSetFlags()[7] ? this.companyName : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.position = fieldSetFlags()[8] ? this.position : (java.lang.Integer) defaultValue(fields()[8]);
        record.createDateTime = fieldSetFlags()[9] ? this.createDateTime : (java.lang.Integer) defaultValue(fields()[9]);
        record.createdDateTime = fieldSetFlags()[10] ? this.createdDateTime : (java.lang.Integer) defaultValue(fields()[10]);
        record.documentId = fieldSetFlags()[11] ? this.documentId : (java.lang.CharSequence) defaultValue(fields()[11]);
        record.eventType = fieldSetFlags()[12] ? this.eventType : (java.lang.CharSequence) defaultValue(fields()[12]);
        record.indexType = fieldSetFlags()[13] ? this.indexType : (java.lang.CharSequence) defaultValue(fields()[13]);
        record.ip = fieldSetFlags()[14] ? this.ip : (java.lang.CharSequence) defaultValue(fields()[14]);
        record.isAd = fieldSetFlags()[15] ? this.isAd : (java.lang.Boolean) defaultValue(fields()[15]);
        record.jobContent = fieldSetFlags()[16] ? this.jobContent : (java.lang.CharSequence) defaultValue(fields()[16]);
        record.jobTitle = fieldSetFlags()[17] ? this.jobTitle : (java.lang.CharSequence) defaultValue(fields()[17]);
        record.jobType = fieldSetFlags()[18] ? this.jobType : (java.lang.CharSequence) defaultValue(fields()[18]);
        record.jobVersionDate = fieldSetFlags()[19] ? this.jobVersionDate : (java.lang.Integer) defaultValue(fields()[19]);
        record.keyword = fieldSetFlags()[20] ? this.keyword : (java.lang.CharSequence) defaultValue(fields()[20]);
        record.location = fieldSetFlags()[21] ? this.location : (java.lang.CharSequence) defaultValue(fields()[21]);
        record.log_host = fieldSetFlags()[22] ? this.log_host : (java.lang.Boolean) defaultValue(fields()[22]);
        record.newJobs = fieldSetFlags()[23] ? this.newJobs : (java.lang.CharSequence) defaultValue(fields()[23]);
        record.openDate = fieldSetFlags()[24] ? this.openDate : (java.lang.Integer) defaultValue(fields()[24]);
        record.order = fieldSetFlags()[25] ? this.order : (java.lang.Integer) defaultValue(fields()[25]);
        record.originDocumentId = fieldSetFlags()[26] ? this.originDocumentId : (java.lang.CharSequence) defaultValue(fields()[26]);
        record.originalKeyword = fieldSetFlags()[27] ? this.originalKeyword : (java.lang.CharSequence) defaultValue(fields()[27]);
        record.referer = fieldSetFlags()[28] ? this.referer : (java.lang.CharSequence) defaultValue(fields()[28]);
        record.relatedJobs = fieldSetFlags()[29] ? this.relatedJobs : (java.lang.CharSequence) defaultValue(fields()[29]);
        record.role = fieldSetFlags()[30] ? this.role : (java.lang.CharSequence) defaultValue(fields()[30]);
        record.salary = fieldSetFlags()[31] ? this.salary : (java.lang.CharSequence) defaultValue(fields()[31]);
        record.searchPage = fieldSetFlags()[32] ? this.searchPage : (java.lang.CharSequence) defaultValue(fields()[32]);
        record.searchRequestId = fieldSetFlags()[33] ? this.searchRequestId : (java.lang.CharSequence) defaultValue(fields()[33]);
        record.searchRequestUrl = fieldSetFlags()[34] ? this.searchRequestUrl : (java.lang.CharSequence) defaultValue(fields()[34]);
        record.siteCodes = fieldSetFlags()[35] ? this.siteCodes : (java.lang.CharSequence) defaultValue(fields()[35]);
        record.siteName = fieldSetFlags()[36] ? this.siteName : (java.lang.CharSequence) defaultValue(fields()[36]);
        record.tag = fieldSetFlags()[37] ? this.tag : (java.lang.CharSequence) defaultValue(fields()[37]);
        record.time = fieldSetFlags()[38] ? this.time : (java.lang.Integer) defaultValue(fields()[38]);
        record.totalHits = fieldSetFlags()[39] ? this.totalHits : (java.lang.Integer) defaultValue(fields()[39]);
        record.uaCategory = fieldSetFlags()[40] ? this.uaCategory : (java.lang.CharSequence) defaultValue(fields()[40]);
        record.uaValue = fieldSetFlags()[41] ? this.uaValue : (java.lang.CharSequence) defaultValue(fields()[41]);
        record.uid = fieldSetFlags()[42] ? this.uid : (java.lang.CharSequence) defaultValue(fields()[42]);
        record.updateDate = fieldSetFlags()[43] ? this.updateDate : (java.lang.Integer) defaultValue(fields()[43]);
        record.visitId = fieldSetFlags()[44] ? this.visitId : (java.lang.CharSequence) defaultValue(fields()[44]);
        record.workLocation = fieldSetFlags()[45] ? this.workLocation : (java.lang.CharSequence) defaultValue(fields()[45]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<JseTracker>
    WRITER$ = (org.apache.avro.io.DatumWriter<JseTracker>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<JseTracker>
    READER$ = (org.apache.avro.io.DatumReader<JseTracker>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
