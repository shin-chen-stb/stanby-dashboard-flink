/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package inc.stanby.schema;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class StanbyEventSession extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 633458711458483840L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"StanbyEventSession\",\"namespace\":\"inc.stanby.schema\",\"fields\":[{\"name\":\"eventCount\",\"type\":\"int\",\"default\":0},{\"name\":\"jobSearchCount\",\"type\":\"int\",\"default\":0},{\"name\":\"jobDetailCount\",\"type\":\"int\",\"default\":0},{\"name\":\"adDetailCount\",\"type\":\"int\",\"default\":0},{\"name\":\"applyJobCount\",\"type\":\"int\",\"default\":0},{\"name\":\"origin\",\"type\":\"string\",\"default\":\"other\"},{\"name\":\"ssid\",\"type\":\"string\",\"default\":\"NONE\"},{\"name\":\"sessionTime\",\"type\":\"long\",\"default\":\"NONE\"},{\"name\":\"sessionEndTime\",\"type\":\"string\",\"default\":\"NONE\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<StanbyEventSession> ENCODER =
      new BinaryMessageEncoder<StanbyEventSession>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<StanbyEventSession> DECODER =
      new BinaryMessageDecoder<StanbyEventSession>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<StanbyEventSession> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<StanbyEventSession> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<StanbyEventSession>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this StanbyEventSession to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a StanbyEventSession from a ByteBuffer. */
  public static StanbyEventSession fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public int eventCount;
  @Deprecated public int jobSearchCount;
  @Deprecated public int jobDetailCount;
  @Deprecated public int adDetailCount;
  @Deprecated public int applyJobCount;
  @Deprecated public java.lang.CharSequence origin;
  @Deprecated public java.lang.CharSequence ssid;
  @Deprecated public long sessionTime;
  @Deprecated public java.lang.CharSequence sessionEndTime;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public StanbyEventSession() {}

  /**
   * All-args constructor.
   * @param eventCount The new value for eventCount
   * @param jobSearchCount The new value for jobSearchCount
   * @param jobDetailCount The new value for jobDetailCount
   * @param adDetailCount The new value for adDetailCount
   * @param applyJobCount The new value for applyJobCount
   * @param origin The new value for origin
   * @param ssid The new value for ssid
   * @param sessionTime The new value for sessionTime
   * @param sessionEndTime The new value for sessionEndTime
   */
  public StanbyEventSession(java.lang.Integer eventCount, java.lang.Integer jobSearchCount, java.lang.Integer jobDetailCount, java.lang.Integer adDetailCount, java.lang.Integer applyJobCount, java.lang.CharSequence origin, java.lang.CharSequence ssid, java.lang.Long sessionTime, java.lang.CharSequence sessionEndTime) {
    this.eventCount = eventCount;
    this.jobSearchCount = jobSearchCount;
    this.jobDetailCount = jobDetailCount;
    this.adDetailCount = adDetailCount;
    this.applyJobCount = applyJobCount;
    this.origin = origin;
    this.ssid = ssid;
    this.sessionTime = sessionTime;
    this.sessionEndTime = sessionEndTime;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return eventCount;
    case 1: return jobSearchCount;
    case 2: return jobDetailCount;
    case 3: return adDetailCount;
    case 4: return applyJobCount;
    case 5: return origin;
    case 6: return ssid;
    case 7: return sessionTime;
    case 8: return sessionEndTime;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: eventCount = (java.lang.Integer)value$; break;
    case 1: jobSearchCount = (java.lang.Integer)value$; break;
    case 2: jobDetailCount = (java.lang.Integer)value$; break;
    case 3: adDetailCount = (java.lang.Integer)value$; break;
    case 4: applyJobCount = (java.lang.Integer)value$; break;
    case 5: origin = (java.lang.CharSequence)value$; break;
    case 6: ssid = (java.lang.CharSequence)value$; break;
    case 7: sessionTime = (java.lang.Long)value$; break;
    case 8: sessionEndTime = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'eventCount' field.
   * @return The value of the 'eventCount' field.
   */
  public java.lang.Integer getEventCount() {
    return eventCount;
  }

  /**
   * Sets the value of the 'eventCount' field.
   * @param value the value to set.
   */
  public void setEventCount(java.lang.Integer value) {
    this.eventCount = value;
  }

  /**
   * Gets the value of the 'jobSearchCount' field.
   * @return The value of the 'jobSearchCount' field.
   */
  public java.lang.Integer getJobSearchCount() {
    return jobSearchCount;
  }

  /**
   * Sets the value of the 'jobSearchCount' field.
   * @param value the value to set.
   */
  public void setJobSearchCount(java.lang.Integer value) {
    this.jobSearchCount = value;
  }

  /**
   * Gets the value of the 'jobDetailCount' field.
   * @return The value of the 'jobDetailCount' field.
   */
  public java.lang.Integer getJobDetailCount() {
    return jobDetailCount;
  }

  /**
   * Sets the value of the 'jobDetailCount' field.
   * @param value the value to set.
   */
  public void setJobDetailCount(java.lang.Integer value) {
    this.jobDetailCount = value;
  }

  /**
   * Gets the value of the 'adDetailCount' field.
   * @return The value of the 'adDetailCount' field.
   */
  public java.lang.Integer getAdDetailCount() {
    return adDetailCount;
  }

  /**
   * Sets the value of the 'adDetailCount' field.
   * @param value the value to set.
   */
  public void setAdDetailCount(java.lang.Integer value) {
    this.adDetailCount = value;
  }

  /**
   * Gets the value of the 'applyJobCount' field.
   * @return The value of the 'applyJobCount' field.
   */
  public java.lang.Integer getApplyJobCount() {
    return applyJobCount;
  }

  /**
   * Sets the value of the 'applyJobCount' field.
   * @param value the value to set.
   */
  public void setApplyJobCount(java.lang.Integer value) {
    this.applyJobCount = value;
  }

  /**
   * Gets the value of the 'origin' field.
   * @return The value of the 'origin' field.
   */
  public java.lang.CharSequence getOrigin() {
    return origin;
  }

  /**
   * Sets the value of the 'origin' field.
   * @param value the value to set.
   */
  public void setOrigin(java.lang.CharSequence value) {
    this.origin = value;
  }

  /**
   * Gets the value of the 'ssid' field.
   * @return The value of the 'ssid' field.
   */
  public java.lang.CharSequence getSsid() {
    return ssid;
  }

  /**
   * Sets the value of the 'ssid' field.
   * @param value the value to set.
   */
  public void setSsid(java.lang.CharSequence value) {
    this.ssid = value;
  }

  /**
   * Gets the value of the 'sessionTime' field.
   * @return The value of the 'sessionTime' field.
   */
  public java.lang.Long getSessionTime() {
    return sessionTime;
  }

  /**
   * Sets the value of the 'sessionTime' field.
   * @param value the value to set.
   */
  public void setSessionTime(java.lang.Long value) {
    this.sessionTime = value;
  }

  /**
   * Gets the value of the 'sessionEndTime' field.
   * @return The value of the 'sessionEndTime' field.
   */
  public java.lang.CharSequence getSessionEndTime() {
    return sessionEndTime;
  }

  /**
   * Sets the value of the 'sessionEndTime' field.
   * @param value the value to set.
   */
  public void setSessionEndTime(java.lang.CharSequence value) {
    this.sessionEndTime = value;
  }

  /**
   * Creates a new StanbyEventSession RecordBuilder.
   * @return A new StanbyEventSession RecordBuilder
   */
  public static inc.stanby.schema.StanbyEventSession.Builder newBuilder() {
    return new inc.stanby.schema.StanbyEventSession.Builder();
  }

  /**
   * Creates a new StanbyEventSession RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new StanbyEventSession RecordBuilder
   */
  public static inc.stanby.schema.StanbyEventSession.Builder newBuilder(inc.stanby.schema.StanbyEventSession.Builder other) {
    return new inc.stanby.schema.StanbyEventSession.Builder(other);
  }

  /**
   * Creates a new StanbyEventSession RecordBuilder by copying an existing StanbyEventSession instance.
   * @param other The existing instance to copy.
   * @return A new StanbyEventSession RecordBuilder
   */
  public static inc.stanby.schema.StanbyEventSession.Builder newBuilder(inc.stanby.schema.StanbyEventSession other) {
    return new inc.stanby.schema.StanbyEventSession.Builder(other);
  }

  /**
   * RecordBuilder for StanbyEventSession instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<StanbyEventSession>
    implements org.apache.avro.data.RecordBuilder<StanbyEventSession> {

    private int eventCount;
    private int jobSearchCount;
    private int jobDetailCount;
    private int adDetailCount;
    private int applyJobCount;
    private java.lang.CharSequence origin;
    private java.lang.CharSequence ssid;
    private long sessionTime;
    private java.lang.CharSequence sessionEndTime;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(inc.stanby.schema.StanbyEventSession.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.eventCount)) {
        this.eventCount = data().deepCopy(fields()[0].schema(), other.eventCount);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.jobSearchCount)) {
        this.jobSearchCount = data().deepCopy(fields()[1].schema(), other.jobSearchCount);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.jobDetailCount)) {
        this.jobDetailCount = data().deepCopy(fields()[2].schema(), other.jobDetailCount);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.adDetailCount)) {
        this.adDetailCount = data().deepCopy(fields()[3].schema(), other.adDetailCount);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.applyJobCount)) {
        this.applyJobCount = data().deepCopy(fields()[4].schema(), other.applyJobCount);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.origin)) {
        this.origin = data().deepCopy(fields()[5].schema(), other.origin);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.ssid)) {
        this.ssid = data().deepCopy(fields()[6].schema(), other.ssid);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.sessionTime)) {
        this.sessionTime = data().deepCopy(fields()[7].schema(), other.sessionTime);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.sessionEndTime)) {
        this.sessionEndTime = data().deepCopy(fields()[8].schema(), other.sessionEndTime);
        fieldSetFlags()[8] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing StanbyEventSession instance
     * @param other The existing instance to copy.
     */
    private Builder(inc.stanby.schema.StanbyEventSession other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.eventCount)) {
        this.eventCount = data().deepCopy(fields()[0].schema(), other.eventCount);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.jobSearchCount)) {
        this.jobSearchCount = data().deepCopy(fields()[1].schema(), other.jobSearchCount);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.jobDetailCount)) {
        this.jobDetailCount = data().deepCopy(fields()[2].schema(), other.jobDetailCount);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.adDetailCount)) {
        this.adDetailCount = data().deepCopy(fields()[3].schema(), other.adDetailCount);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.applyJobCount)) {
        this.applyJobCount = data().deepCopy(fields()[4].schema(), other.applyJobCount);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.origin)) {
        this.origin = data().deepCopy(fields()[5].schema(), other.origin);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.ssid)) {
        this.ssid = data().deepCopy(fields()[6].schema(), other.ssid);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.sessionTime)) {
        this.sessionTime = data().deepCopy(fields()[7].schema(), other.sessionTime);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.sessionEndTime)) {
        this.sessionEndTime = data().deepCopy(fields()[8].schema(), other.sessionEndTime);
        fieldSetFlags()[8] = true;
      }
    }

    /**
      * Gets the value of the 'eventCount' field.
      * @return The value.
      */
    public java.lang.Integer getEventCount() {
      return eventCount;
    }

    /**
      * Sets the value of the 'eventCount' field.
      * @param value The value of 'eventCount'.
      * @return This builder.
      */
    public inc.stanby.schema.StanbyEventSession.Builder setEventCount(int value) {
      validate(fields()[0], value);
      this.eventCount = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'eventCount' field has been set.
      * @return True if the 'eventCount' field has been set, false otherwise.
      */
    public boolean hasEventCount() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'eventCount' field.
      * @return This builder.
      */
    public inc.stanby.schema.StanbyEventSession.Builder clearEventCount() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'jobSearchCount' field.
      * @return The value.
      */
    public java.lang.Integer getJobSearchCount() {
      return jobSearchCount;
    }

    /**
      * Sets the value of the 'jobSearchCount' field.
      * @param value The value of 'jobSearchCount'.
      * @return This builder.
      */
    public inc.stanby.schema.StanbyEventSession.Builder setJobSearchCount(int value) {
      validate(fields()[1], value);
      this.jobSearchCount = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'jobSearchCount' field has been set.
      * @return True if the 'jobSearchCount' field has been set, false otherwise.
      */
    public boolean hasJobSearchCount() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'jobSearchCount' field.
      * @return This builder.
      */
    public inc.stanby.schema.StanbyEventSession.Builder clearJobSearchCount() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'jobDetailCount' field.
      * @return The value.
      */
    public java.lang.Integer getJobDetailCount() {
      return jobDetailCount;
    }

    /**
      * Sets the value of the 'jobDetailCount' field.
      * @param value The value of 'jobDetailCount'.
      * @return This builder.
      */
    public inc.stanby.schema.StanbyEventSession.Builder setJobDetailCount(int value) {
      validate(fields()[2], value);
      this.jobDetailCount = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'jobDetailCount' field has been set.
      * @return True if the 'jobDetailCount' field has been set, false otherwise.
      */
    public boolean hasJobDetailCount() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'jobDetailCount' field.
      * @return This builder.
      */
    public inc.stanby.schema.StanbyEventSession.Builder clearJobDetailCount() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'adDetailCount' field.
      * @return The value.
      */
    public java.lang.Integer getAdDetailCount() {
      return adDetailCount;
    }

    /**
      * Sets the value of the 'adDetailCount' field.
      * @param value The value of 'adDetailCount'.
      * @return This builder.
      */
    public inc.stanby.schema.StanbyEventSession.Builder setAdDetailCount(int value) {
      validate(fields()[3], value);
      this.adDetailCount = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'adDetailCount' field has been set.
      * @return True if the 'adDetailCount' field has been set, false otherwise.
      */
    public boolean hasAdDetailCount() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'adDetailCount' field.
      * @return This builder.
      */
    public inc.stanby.schema.StanbyEventSession.Builder clearAdDetailCount() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'applyJobCount' field.
      * @return The value.
      */
    public java.lang.Integer getApplyJobCount() {
      return applyJobCount;
    }

    /**
      * Sets the value of the 'applyJobCount' field.
      * @param value The value of 'applyJobCount'.
      * @return This builder.
      */
    public inc.stanby.schema.StanbyEventSession.Builder setApplyJobCount(int value) {
      validate(fields()[4], value);
      this.applyJobCount = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'applyJobCount' field has been set.
      * @return True if the 'applyJobCount' field has been set, false otherwise.
      */
    public boolean hasApplyJobCount() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'applyJobCount' field.
      * @return This builder.
      */
    public inc.stanby.schema.StanbyEventSession.Builder clearApplyJobCount() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'origin' field.
      * @return The value.
      */
    public java.lang.CharSequence getOrigin() {
      return origin;
    }

    /**
      * Sets the value of the 'origin' field.
      * @param value The value of 'origin'.
      * @return This builder.
      */
    public inc.stanby.schema.StanbyEventSession.Builder setOrigin(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.origin = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'origin' field has been set.
      * @return True if the 'origin' field has been set, false otherwise.
      */
    public boolean hasOrigin() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'origin' field.
      * @return This builder.
      */
    public inc.stanby.schema.StanbyEventSession.Builder clearOrigin() {
      origin = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'ssid' field.
      * @return The value.
      */
    public java.lang.CharSequence getSsid() {
      return ssid;
    }

    /**
      * Sets the value of the 'ssid' field.
      * @param value The value of 'ssid'.
      * @return This builder.
      */
    public inc.stanby.schema.StanbyEventSession.Builder setSsid(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.ssid = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'ssid' field has been set.
      * @return True if the 'ssid' field has been set, false otherwise.
      */
    public boolean hasSsid() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'ssid' field.
      * @return This builder.
      */
    public inc.stanby.schema.StanbyEventSession.Builder clearSsid() {
      ssid = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'sessionTime' field.
      * @return The value.
      */
    public java.lang.Long getSessionTime() {
      return sessionTime;
    }

    /**
      * Sets the value of the 'sessionTime' field.
      * @param value The value of 'sessionTime'.
      * @return This builder.
      */
    public inc.stanby.schema.StanbyEventSession.Builder setSessionTime(long value) {
      validate(fields()[7], value);
      this.sessionTime = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'sessionTime' field has been set.
      * @return True if the 'sessionTime' field has been set, false otherwise.
      */
    public boolean hasSessionTime() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'sessionTime' field.
      * @return This builder.
      */
    public inc.stanby.schema.StanbyEventSession.Builder clearSessionTime() {
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'sessionEndTime' field.
      * @return The value.
      */
    public java.lang.CharSequence getSessionEndTime() {
      return sessionEndTime;
    }

    /**
      * Sets the value of the 'sessionEndTime' field.
      * @param value The value of 'sessionEndTime'.
      * @return This builder.
      */
    public inc.stanby.schema.StanbyEventSession.Builder setSessionEndTime(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.sessionEndTime = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'sessionEndTime' field has been set.
      * @return True if the 'sessionEndTime' field has been set, false otherwise.
      */
    public boolean hasSessionEndTime() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'sessionEndTime' field.
      * @return This builder.
      */
    public inc.stanby.schema.StanbyEventSession.Builder clearSessionEndTime() {
      sessionEndTime = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public StanbyEventSession build() {
      try {
        StanbyEventSession record = new StanbyEventSession();
        record.eventCount = fieldSetFlags()[0] ? this.eventCount : (java.lang.Integer) defaultValue(fields()[0]);
        record.jobSearchCount = fieldSetFlags()[1] ? this.jobSearchCount : (java.lang.Integer) defaultValue(fields()[1]);
        record.jobDetailCount = fieldSetFlags()[2] ? this.jobDetailCount : (java.lang.Integer) defaultValue(fields()[2]);
        record.adDetailCount = fieldSetFlags()[3] ? this.adDetailCount : (java.lang.Integer) defaultValue(fields()[3]);
        record.applyJobCount = fieldSetFlags()[4] ? this.applyJobCount : (java.lang.Integer) defaultValue(fields()[4]);
        record.origin = fieldSetFlags()[5] ? this.origin : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.ssid = fieldSetFlags()[6] ? this.ssid : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.sessionTime = fieldSetFlags()[7] ? this.sessionTime : (java.lang.Long) defaultValue(fields()[7]);
        record.sessionEndTime = fieldSetFlags()[8] ? this.sessionEndTime : (java.lang.CharSequence) defaultValue(fields()[8]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<StanbyEventSession>
    WRITER$ = (org.apache.avro.io.DatumWriter<StanbyEventSession>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<StanbyEventSession>
    READER$ = (org.apache.avro.io.DatumReader<StanbyEventSession>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
