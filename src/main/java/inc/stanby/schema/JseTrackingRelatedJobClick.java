/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package inc.stanby.schema;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class JseTrackingRelatedJobClick extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 1409991928649237675L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"JseTrackingRelatedJobClick\",\"namespace\":\"inc.stanby.schema\",\"fields\":[{\"name\":\"bucketType\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"category\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"originDocumentId\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"order\",\"type\":\"int\",\"default\":0},{\"name\":\"role\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"log_host\",\"type\":\"boolean\",\"default\":false},{\"name\":\"clickId\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"createDateTime\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"documentId\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"uid\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"eventType\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"ip\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"tag\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"time\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"isAd\",\"type\":\"boolean\",\"default\":false},{\"name\":\"uaValue\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"visitId\",\"type\":\"string\",\"default\":\"\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<JseTrackingRelatedJobClick> ENCODER =
      new BinaryMessageEncoder<JseTrackingRelatedJobClick>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<JseTrackingRelatedJobClick> DECODER =
      new BinaryMessageDecoder<JseTrackingRelatedJobClick>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<JseTrackingRelatedJobClick> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<JseTrackingRelatedJobClick> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<JseTrackingRelatedJobClick>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this JseTrackingRelatedJobClick to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a JseTrackingRelatedJobClick from a ByteBuffer. */
  public static JseTrackingRelatedJobClick fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence bucketType;
  @Deprecated public java.lang.CharSequence category;
  @Deprecated public java.lang.CharSequence originDocumentId;
  @Deprecated public int order;
  @Deprecated public java.lang.CharSequence role;
  @Deprecated public boolean log_host;
  @Deprecated public java.lang.CharSequence clickId;
  @Deprecated public java.lang.CharSequence createDateTime;
  @Deprecated public java.lang.CharSequence documentId;
  @Deprecated public java.lang.CharSequence uid;
  @Deprecated public java.lang.CharSequence eventType;
  @Deprecated public java.lang.CharSequence ip;
  @Deprecated public java.lang.CharSequence tag;
  @Deprecated public java.lang.CharSequence time;
  @Deprecated public boolean isAd;
  @Deprecated public java.lang.CharSequence uaValue;
  @Deprecated public java.lang.CharSequence visitId;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public JseTrackingRelatedJobClick() {}

  /**
   * All-args constructor.
   * @param bucketType The new value for bucketType
   * @param category The new value for category
   * @param originDocumentId The new value for originDocumentId
   * @param order The new value for order
   * @param role The new value for role
   * @param log_host The new value for log_host
   * @param clickId The new value for clickId
   * @param createDateTime The new value for createDateTime
   * @param documentId The new value for documentId
   * @param uid The new value for uid
   * @param eventType The new value for eventType
   * @param ip The new value for ip
   * @param tag The new value for tag
   * @param time The new value for time
   * @param isAd The new value for isAd
   * @param uaValue The new value for uaValue
   * @param visitId The new value for visitId
   */
  public JseTrackingRelatedJobClick(java.lang.CharSequence bucketType, java.lang.CharSequence category, java.lang.CharSequence originDocumentId, java.lang.Integer order, java.lang.CharSequence role, java.lang.Boolean log_host, java.lang.CharSequence clickId, java.lang.CharSequence createDateTime, java.lang.CharSequence documentId, java.lang.CharSequence uid, java.lang.CharSequence eventType, java.lang.CharSequence ip, java.lang.CharSequence tag, java.lang.CharSequence time, java.lang.Boolean isAd, java.lang.CharSequence uaValue, java.lang.CharSequence visitId) {
    this.bucketType = bucketType;
    this.category = category;
    this.originDocumentId = originDocumentId;
    this.order = order;
    this.role = role;
    this.log_host = log_host;
    this.clickId = clickId;
    this.createDateTime = createDateTime;
    this.documentId = documentId;
    this.uid = uid;
    this.eventType = eventType;
    this.ip = ip;
    this.tag = tag;
    this.time = time;
    this.isAd = isAd;
    this.uaValue = uaValue;
    this.visitId = visitId;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return bucketType;
    case 1: return category;
    case 2: return originDocumentId;
    case 3: return order;
    case 4: return role;
    case 5: return log_host;
    case 6: return clickId;
    case 7: return createDateTime;
    case 8: return documentId;
    case 9: return uid;
    case 10: return eventType;
    case 11: return ip;
    case 12: return tag;
    case 13: return time;
    case 14: return isAd;
    case 15: return uaValue;
    case 16: return visitId;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: bucketType = (java.lang.CharSequence)value$; break;
    case 1: category = (java.lang.CharSequence)value$; break;
    case 2: originDocumentId = (java.lang.CharSequence)value$; break;
    case 3: order = (java.lang.Integer)value$; break;
    case 4: role = (java.lang.CharSequence)value$; break;
    case 5: log_host = (java.lang.Boolean)value$; break;
    case 6: clickId = (java.lang.CharSequence)value$; break;
    case 7: createDateTime = (java.lang.CharSequence)value$; break;
    case 8: documentId = (java.lang.CharSequence)value$; break;
    case 9: uid = (java.lang.CharSequence)value$; break;
    case 10: eventType = (java.lang.CharSequence)value$; break;
    case 11: ip = (java.lang.CharSequence)value$; break;
    case 12: tag = (java.lang.CharSequence)value$; break;
    case 13: time = (java.lang.CharSequence)value$; break;
    case 14: isAd = (java.lang.Boolean)value$; break;
    case 15: uaValue = (java.lang.CharSequence)value$; break;
    case 16: visitId = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'bucketType' field.
   * @return The value of the 'bucketType' field.
   */
  public java.lang.CharSequence getBucketType() {
    return bucketType;
  }

  /**
   * Sets the value of the 'bucketType' field.
   * @param value the value to set.
   */
  public void setBucketType(java.lang.CharSequence value) {
    this.bucketType = value;
  }

  /**
   * Gets the value of the 'category' field.
   * @return The value of the 'category' field.
   */
  public java.lang.CharSequence getCategory() {
    return category;
  }

  /**
   * Sets the value of the 'category' field.
   * @param value the value to set.
   */
  public void setCategory(java.lang.CharSequence value) {
    this.category = value;
  }

  /**
   * Gets the value of the 'originDocumentId' field.
   * @return The value of the 'originDocumentId' field.
   */
  public java.lang.CharSequence getOriginDocumentId() {
    return originDocumentId;
  }

  /**
   * Sets the value of the 'originDocumentId' field.
   * @param value the value to set.
   */
  public void setOriginDocumentId(java.lang.CharSequence value) {
    this.originDocumentId = value;
  }

  /**
   * Gets the value of the 'order' field.
   * @return The value of the 'order' field.
   */
  public java.lang.Integer getOrder() {
    return order;
  }

  /**
   * Sets the value of the 'order' field.
   * @param value the value to set.
   */
  public void setOrder(java.lang.Integer value) {
    this.order = value;
  }

  /**
   * Gets the value of the 'role' field.
   * @return The value of the 'role' field.
   */
  public java.lang.CharSequence getRole() {
    return role;
  }

  /**
   * Sets the value of the 'role' field.
   * @param value the value to set.
   */
  public void setRole(java.lang.CharSequence value) {
    this.role = value;
  }

  /**
   * Gets the value of the 'log_host' field.
   * @return The value of the 'log_host' field.
   */
  public java.lang.Boolean getLogHost() {
    return log_host;
  }

  /**
   * Sets the value of the 'log_host' field.
   * @param value the value to set.
   */
  public void setLogHost(java.lang.Boolean value) {
    this.log_host = value;
  }

  /**
   * Gets the value of the 'clickId' field.
   * @return The value of the 'clickId' field.
   */
  public java.lang.CharSequence getClickId() {
    return clickId;
  }

  /**
   * Sets the value of the 'clickId' field.
   * @param value the value to set.
   */
  public void setClickId(java.lang.CharSequence value) {
    this.clickId = value;
  }

  /**
   * Gets the value of the 'createDateTime' field.
   * @return The value of the 'createDateTime' field.
   */
  public java.lang.CharSequence getCreateDateTime() {
    return createDateTime;
  }

  /**
   * Sets the value of the 'createDateTime' field.
   * @param value the value to set.
   */
  public void setCreateDateTime(java.lang.CharSequence value) {
    this.createDateTime = value;
  }

  /**
   * Gets the value of the 'documentId' field.
   * @return The value of the 'documentId' field.
   */
  public java.lang.CharSequence getDocumentId() {
    return documentId;
  }

  /**
   * Sets the value of the 'documentId' field.
   * @param value the value to set.
   */
  public void setDocumentId(java.lang.CharSequence value) {
    this.documentId = value;
  }

  /**
   * Gets the value of the 'uid' field.
   * @return The value of the 'uid' field.
   */
  public java.lang.CharSequence getUid() {
    return uid;
  }

  /**
   * Sets the value of the 'uid' field.
   * @param value the value to set.
   */
  public void setUid(java.lang.CharSequence value) {
    this.uid = value;
  }

  /**
   * Gets the value of the 'eventType' field.
   * @return The value of the 'eventType' field.
   */
  public java.lang.CharSequence getEventType() {
    return eventType;
  }

  /**
   * Sets the value of the 'eventType' field.
   * @param value the value to set.
   */
  public void setEventType(java.lang.CharSequence value) {
    this.eventType = value;
  }

  /**
   * Gets the value of the 'ip' field.
   * @return The value of the 'ip' field.
   */
  public java.lang.CharSequence getIp() {
    return ip;
  }

  /**
   * Sets the value of the 'ip' field.
   * @param value the value to set.
   */
  public void setIp(java.lang.CharSequence value) {
    this.ip = value;
  }

  /**
   * Gets the value of the 'tag' field.
   * @return The value of the 'tag' field.
   */
  public java.lang.CharSequence getTag() {
    return tag;
  }

  /**
   * Sets the value of the 'tag' field.
   * @param value the value to set.
   */
  public void setTag(java.lang.CharSequence value) {
    this.tag = value;
  }

  /**
   * Gets the value of the 'time' field.
   * @return The value of the 'time' field.
   */
  public java.lang.CharSequence getTime() {
    return time;
  }

  /**
   * Sets the value of the 'time' field.
   * @param value the value to set.
   */
  public void setTime(java.lang.CharSequence value) {
    this.time = value;
  }

  /**
   * Gets the value of the 'isAd' field.
   * @return The value of the 'isAd' field.
   */
  public java.lang.Boolean getIsAd() {
    return isAd;
  }

  /**
   * Sets the value of the 'isAd' field.
   * @param value the value to set.
   */
  public void setIsAd(java.lang.Boolean value) {
    this.isAd = value;
  }

  /**
   * Gets the value of the 'uaValue' field.
   * @return The value of the 'uaValue' field.
   */
  public java.lang.CharSequence getUaValue() {
    return uaValue;
  }

  /**
   * Sets the value of the 'uaValue' field.
   * @param value the value to set.
   */
  public void setUaValue(java.lang.CharSequence value) {
    this.uaValue = value;
  }

  /**
   * Gets the value of the 'visitId' field.
   * @return The value of the 'visitId' field.
   */
  public java.lang.CharSequence getVisitId() {
    return visitId;
  }

  /**
   * Sets the value of the 'visitId' field.
   * @param value the value to set.
   */
  public void setVisitId(java.lang.CharSequence value) {
    this.visitId = value;
  }

  /**
   * Creates a new JseTrackingRelatedJobClick RecordBuilder.
   * @return A new JseTrackingRelatedJobClick RecordBuilder
   */
  public static inc.stanby.schema.JseTrackingRelatedJobClick.Builder newBuilder() {
    return new inc.stanby.schema.JseTrackingRelatedJobClick.Builder();
  }

  /**
   * Creates a new JseTrackingRelatedJobClick RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new JseTrackingRelatedJobClick RecordBuilder
   */
  public static inc.stanby.schema.JseTrackingRelatedJobClick.Builder newBuilder(inc.stanby.schema.JseTrackingRelatedJobClick.Builder other) {
    return new inc.stanby.schema.JseTrackingRelatedJobClick.Builder(other);
  }

  /**
   * Creates a new JseTrackingRelatedJobClick RecordBuilder by copying an existing JseTrackingRelatedJobClick instance.
   * @param other The existing instance to copy.
   * @return A new JseTrackingRelatedJobClick RecordBuilder
   */
  public static inc.stanby.schema.JseTrackingRelatedJobClick.Builder newBuilder(inc.stanby.schema.JseTrackingRelatedJobClick other) {
    return new inc.stanby.schema.JseTrackingRelatedJobClick.Builder(other);
  }

  /**
   * RecordBuilder for JseTrackingRelatedJobClick instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<JseTrackingRelatedJobClick>
    implements org.apache.avro.data.RecordBuilder<JseTrackingRelatedJobClick> {

    private java.lang.CharSequence bucketType;
    private java.lang.CharSequence category;
    private java.lang.CharSequence originDocumentId;
    private int order;
    private java.lang.CharSequence role;
    private boolean log_host;
    private java.lang.CharSequence clickId;
    private java.lang.CharSequence createDateTime;
    private java.lang.CharSequence documentId;
    private java.lang.CharSequence uid;
    private java.lang.CharSequence eventType;
    private java.lang.CharSequence ip;
    private java.lang.CharSequence tag;
    private java.lang.CharSequence time;
    private boolean isAd;
    private java.lang.CharSequence uaValue;
    private java.lang.CharSequence visitId;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(inc.stanby.schema.JseTrackingRelatedJobClick.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.bucketType)) {
        this.bucketType = data().deepCopy(fields()[0].schema(), other.bucketType);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.category)) {
        this.category = data().deepCopy(fields()[1].schema(), other.category);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.originDocumentId)) {
        this.originDocumentId = data().deepCopy(fields()[2].schema(), other.originDocumentId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.order)) {
        this.order = data().deepCopy(fields()[3].schema(), other.order);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.role)) {
        this.role = data().deepCopy(fields()[4].schema(), other.role);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.log_host)) {
        this.log_host = data().deepCopy(fields()[5].schema(), other.log_host);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.clickId)) {
        this.clickId = data().deepCopy(fields()[6].schema(), other.clickId);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.createDateTime)) {
        this.createDateTime = data().deepCopy(fields()[7].schema(), other.createDateTime);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.documentId)) {
        this.documentId = data().deepCopy(fields()[8].schema(), other.documentId);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.uid)) {
        this.uid = data().deepCopy(fields()[9].schema(), other.uid);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.eventType)) {
        this.eventType = data().deepCopy(fields()[10].schema(), other.eventType);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.ip)) {
        this.ip = data().deepCopy(fields()[11].schema(), other.ip);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.tag)) {
        this.tag = data().deepCopy(fields()[12].schema(), other.tag);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.time)) {
        this.time = data().deepCopy(fields()[13].schema(), other.time);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.isAd)) {
        this.isAd = data().deepCopy(fields()[14].schema(), other.isAd);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.uaValue)) {
        this.uaValue = data().deepCopy(fields()[15].schema(), other.uaValue);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.visitId)) {
        this.visitId = data().deepCopy(fields()[16].schema(), other.visitId);
        fieldSetFlags()[16] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing JseTrackingRelatedJobClick instance
     * @param other The existing instance to copy.
     */
    private Builder(inc.stanby.schema.JseTrackingRelatedJobClick other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.bucketType)) {
        this.bucketType = data().deepCopy(fields()[0].schema(), other.bucketType);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.category)) {
        this.category = data().deepCopy(fields()[1].schema(), other.category);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.originDocumentId)) {
        this.originDocumentId = data().deepCopy(fields()[2].schema(), other.originDocumentId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.order)) {
        this.order = data().deepCopy(fields()[3].schema(), other.order);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.role)) {
        this.role = data().deepCopy(fields()[4].schema(), other.role);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.log_host)) {
        this.log_host = data().deepCopy(fields()[5].schema(), other.log_host);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.clickId)) {
        this.clickId = data().deepCopy(fields()[6].schema(), other.clickId);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.createDateTime)) {
        this.createDateTime = data().deepCopy(fields()[7].schema(), other.createDateTime);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.documentId)) {
        this.documentId = data().deepCopy(fields()[8].schema(), other.documentId);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.uid)) {
        this.uid = data().deepCopy(fields()[9].schema(), other.uid);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.eventType)) {
        this.eventType = data().deepCopy(fields()[10].schema(), other.eventType);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.ip)) {
        this.ip = data().deepCopy(fields()[11].schema(), other.ip);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.tag)) {
        this.tag = data().deepCopy(fields()[12].schema(), other.tag);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.time)) {
        this.time = data().deepCopy(fields()[13].schema(), other.time);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.isAd)) {
        this.isAd = data().deepCopy(fields()[14].schema(), other.isAd);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.uaValue)) {
        this.uaValue = data().deepCopy(fields()[15].schema(), other.uaValue);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.visitId)) {
        this.visitId = data().deepCopy(fields()[16].schema(), other.visitId);
        fieldSetFlags()[16] = true;
      }
    }

    /**
      * Gets the value of the 'bucketType' field.
      * @return The value.
      */
    public java.lang.CharSequence getBucketType() {
      return bucketType;
    }

    /**
      * Sets the value of the 'bucketType' field.
      * @param value The value of 'bucketType'.
      * @return This builder.
      */
    public inc.stanby.schema.JseTrackingRelatedJobClick.Builder setBucketType(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.bucketType = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'bucketType' field has been set.
      * @return True if the 'bucketType' field has been set, false otherwise.
      */
    public boolean hasBucketType() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'bucketType' field.
      * @return This builder.
      */
    public inc.stanby.schema.JseTrackingRelatedJobClick.Builder clearBucketType() {
      bucketType = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'category' field.
      * @return The value.
      */
    public java.lang.CharSequence getCategory() {
      return category;
    }

    /**
      * Sets the value of the 'category' field.
      * @param value The value of 'category'.
      * @return This builder.
      */
    public inc.stanby.schema.JseTrackingRelatedJobClick.Builder setCategory(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.category = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'category' field has been set.
      * @return True if the 'category' field has been set, false otherwise.
      */
    public boolean hasCategory() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'category' field.
      * @return This builder.
      */
    public inc.stanby.schema.JseTrackingRelatedJobClick.Builder clearCategory() {
      category = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'originDocumentId' field.
      * @return The value.
      */
    public java.lang.CharSequence getOriginDocumentId() {
      return originDocumentId;
    }

    /**
      * Sets the value of the 'originDocumentId' field.
      * @param value The value of 'originDocumentId'.
      * @return This builder.
      */
    public inc.stanby.schema.JseTrackingRelatedJobClick.Builder setOriginDocumentId(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.originDocumentId = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'originDocumentId' field has been set.
      * @return True if the 'originDocumentId' field has been set, false otherwise.
      */
    public boolean hasOriginDocumentId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'originDocumentId' field.
      * @return This builder.
      */
    public inc.stanby.schema.JseTrackingRelatedJobClick.Builder clearOriginDocumentId() {
      originDocumentId = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'order' field.
      * @return The value.
      */
    public java.lang.Integer getOrder() {
      return order;
    }

    /**
      * Sets the value of the 'order' field.
      * @param value The value of 'order'.
      * @return This builder.
      */
    public inc.stanby.schema.JseTrackingRelatedJobClick.Builder setOrder(int value) {
      validate(fields()[3], value);
      this.order = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'order' field has been set.
      * @return True if the 'order' field has been set, false otherwise.
      */
    public boolean hasOrder() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'order' field.
      * @return This builder.
      */
    public inc.stanby.schema.JseTrackingRelatedJobClick.Builder clearOrder() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'role' field.
      * @return The value.
      */
    public java.lang.CharSequence getRole() {
      return role;
    }

    /**
      * Sets the value of the 'role' field.
      * @param value The value of 'role'.
      * @return This builder.
      */
    public inc.stanby.schema.JseTrackingRelatedJobClick.Builder setRole(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.role = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'role' field has been set.
      * @return True if the 'role' field has been set, false otherwise.
      */
    public boolean hasRole() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'role' field.
      * @return This builder.
      */
    public inc.stanby.schema.JseTrackingRelatedJobClick.Builder clearRole() {
      role = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'log_host' field.
      * @return The value.
      */
    public java.lang.Boolean getLogHost() {
      return log_host;
    }

    /**
      * Sets the value of the 'log_host' field.
      * @param value The value of 'log_host'.
      * @return This builder.
      */
    public inc.stanby.schema.JseTrackingRelatedJobClick.Builder setLogHost(boolean value) {
      validate(fields()[5], value);
      this.log_host = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'log_host' field has been set.
      * @return True if the 'log_host' field has been set, false otherwise.
      */
    public boolean hasLogHost() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'log_host' field.
      * @return This builder.
      */
    public inc.stanby.schema.JseTrackingRelatedJobClick.Builder clearLogHost() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'clickId' field.
      * @return The value.
      */
    public java.lang.CharSequence getClickId() {
      return clickId;
    }

    /**
      * Sets the value of the 'clickId' field.
      * @param value The value of 'clickId'.
      * @return This builder.
      */
    public inc.stanby.schema.JseTrackingRelatedJobClick.Builder setClickId(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.clickId = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'clickId' field has been set.
      * @return True if the 'clickId' field has been set, false otherwise.
      */
    public boolean hasClickId() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'clickId' field.
      * @return This builder.
      */
    public inc.stanby.schema.JseTrackingRelatedJobClick.Builder clearClickId() {
      clickId = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'createDateTime' field.
      * @return The value.
      */
    public java.lang.CharSequence getCreateDateTime() {
      return createDateTime;
    }

    /**
      * Sets the value of the 'createDateTime' field.
      * @param value The value of 'createDateTime'.
      * @return This builder.
      */
    public inc.stanby.schema.JseTrackingRelatedJobClick.Builder setCreateDateTime(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.createDateTime = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'createDateTime' field has been set.
      * @return True if the 'createDateTime' field has been set, false otherwise.
      */
    public boolean hasCreateDateTime() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'createDateTime' field.
      * @return This builder.
      */
    public inc.stanby.schema.JseTrackingRelatedJobClick.Builder clearCreateDateTime() {
      createDateTime = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'documentId' field.
      * @return The value.
      */
    public java.lang.CharSequence getDocumentId() {
      return documentId;
    }

    /**
      * Sets the value of the 'documentId' field.
      * @param value The value of 'documentId'.
      * @return This builder.
      */
    public inc.stanby.schema.JseTrackingRelatedJobClick.Builder setDocumentId(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.documentId = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'documentId' field has been set.
      * @return True if the 'documentId' field has been set, false otherwise.
      */
    public boolean hasDocumentId() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'documentId' field.
      * @return This builder.
      */
    public inc.stanby.schema.JseTrackingRelatedJobClick.Builder clearDocumentId() {
      documentId = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'uid' field.
      * @return The value.
      */
    public java.lang.CharSequence getUid() {
      return uid;
    }

    /**
      * Sets the value of the 'uid' field.
      * @param value The value of 'uid'.
      * @return This builder.
      */
    public inc.stanby.schema.JseTrackingRelatedJobClick.Builder setUid(java.lang.CharSequence value) {
      validate(fields()[9], value);
      this.uid = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'uid' field has been set.
      * @return True if the 'uid' field has been set, false otherwise.
      */
    public boolean hasUid() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'uid' field.
      * @return This builder.
      */
    public inc.stanby.schema.JseTrackingRelatedJobClick.Builder clearUid() {
      uid = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'eventType' field.
      * @return The value.
      */
    public java.lang.CharSequence getEventType() {
      return eventType;
    }

    /**
      * Sets the value of the 'eventType' field.
      * @param value The value of 'eventType'.
      * @return This builder.
      */
    public inc.stanby.schema.JseTrackingRelatedJobClick.Builder setEventType(java.lang.CharSequence value) {
      validate(fields()[10], value);
      this.eventType = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'eventType' field has been set.
      * @return True if the 'eventType' field has been set, false otherwise.
      */
    public boolean hasEventType() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'eventType' field.
      * @return This builder.
      */
    public inc.stanby.schema.JseTrackingRelatedJobClick.Builder clearEventType() {
      eventType = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'ip' field.
      * @return The value.
      */
    public java.lang.CharSequence getIp() {
      return ip;
    }

    /**
      * Sets the value of the 'ip' field.
      * @param value The value of 'ip'.
      * @return This builder.
      */
    public inc.stanby.schema.JseTrackingRelatedJobClick.Builder setIp(java.lang.CharSequence value) {
      validate(fields()[11], value);
      this.ip = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'ip' field has been set.
      * @return True if the 'ip' field has been set, false otherwise.
      */
    public boolean hasIp() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'ip' field.
      * @return This builder.
      */
    public inc.stanby.schema.JseTrackingRelatedJobClick.Builder clearIp() {
      ip = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'tag' field.
      * @return The value.
      */
    public java.lang.CharSequence getTag() {
      return tag;
    }

    /**
      * Sets the value of the 'tag' field.
      * @param value The value of 'tag'.
      * @return This builder.
      */
    public inc.stanby.schema.JseTrackingRelatedJobClick.Builder setTag(java.lang.CharSequence value) {
      validate(fields()[12], value);
      this.tag = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'tag' field has been set.
      * @return True if the 'tag' field has been set, false otherwise.
      */
    public boolean hasTag() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'tag' field.
      * @return This builder.
      */
    public inc.stanby.schema.JseTrackingRelatedJobClick.Builder clearTag() {
      tag = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'time' field.
      * @return The value.
      */
    public java.lang.CharSequence getTime() {
      return time;
    }

    /**
      * Sets the value of the 'time' field.
      * @param value The value of 'time'.
      * @return This builder.
      */
    public inc.stanby.schema.JseTrackingRelatedJobClick.Builder setTime(java.lang.CharSequence value) {
      validate(fields()[13], value);
      this.time = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'time' field has been set.
      * @return True if the 'time' field has been set, false otherwise.
      */
    public boolean hasTime() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'time' field.
      * @return This builder.
      */
    public inc.stanby.schema.JseTrackingRelatedJobClick.Builder clearTime() {
      time = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'isAd' field.
      * @return The value.
      */
    public java.lang.Boolean getIsAd() {
      return isAd;
    }

    /**
      * Sets the value of the 'isAd' field.
      * @param value The value of 'isAd'.
      * @return This builder.
      */
    public inc.stanby.schema.JseTrackingRelatedJobClick.Builder setIsAd(boolean value) {
      validate(fields()[14], value);
      this.isAd = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'isAd' field has been set.
      * @return True if the 'isAd' field has been set, false otherwise.
      */
    public boolean hasIsAd() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'isAd' field.
      * @return This builder.
      */
    public inc.stanby.schema.JseTrackingRelatedJobClick.Builder clearIsAd() {
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'uaValue' field.
      * @return The value.
      */
    public java.lang.CharSequence getUaValue() {
      return uaValue;
    }

    /**
      * Sets the value of the 'uaValue' field.
      * @param value The value of 'uaValue'.
      * @return This builder.
      */
    public inc.stanby.schema.JseTrackingRelatedJobClick.Builder setUaValue(java.lang.CharSequence value) {
      validate(fields()[15], value);
      this.uaValue = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'uaValue' field has been set.
      * @return True if the 'uaValue' field has been set, false otherwise.
      */
    public boolean hasUaValue() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'uaValue' field.
      * @return This builder.
      */
    public inc.stanby.schema.JseTrackingRelatedJobClick.Builder clearUaValue() {
      uaValue = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'visitId' field.
      * @return The value.
      */
    public java.lang.CharSequence getVisitId() {
      return visitId;
    }

    /**
      * Sets the value of the 'visitId' field.
      * @param value The value of 'visitId'.
      * @return This builder.
      */
    public inc.stanby.schema.JseTrackingRelatedJobClick.Builder setVisitId(java.lang.CharSequence value) {
      validate(fields()[16], value);
      this.visitId = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'visitId' field has been set.
      * @return True if the 'visitId' field has been set, false otherwise.
      */
    public boolean hasVisitId() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'visitId' field.
      * @return This builder.
      */
    public inc.stanby.schema.JseTrackingRelatedJobClick.Builder clearVisitId() {
      visitId = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public JseTrackingRelatedJobClick build() {
      try {
        JseTrackingRelatedJobClick record = new JseTrackingRelatedJobClick();
        record.bucketType = fieldSetFlags()[0] ? this.bucketType : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.category = fieldSetFlags()[1] ? this.category : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.originDocumentId = fieldSetFlags()[2] ? this.originDocumentId : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.order = fieldSetFlags()[3] ? this.order : (java.lang.Integer) defaultValue(fields()[3]);
        record.role = fieldSetFlags()[4] ? this.role : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.log_host = fieldSetFlags()[5] ? this.log_host : (java.lang.Boolean) defaultValue(fields()[5]);
        record.clickId = fieldSetFlags()[6] ? this.clickId : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.createDateTime = fieldSetFlags()[7] ? this.createDateTime : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.documentId = fieldSetFlags()[8] ? this.documentId : (java.lang.CharSequence) defaultValue(fields()[8]);
        record.uid = fieldSetFlags()[9] ? this.uid : (java.lang.CharSequence) defaultValue(fields()[9]);
        record.eventType = fieldSetFlags()[10] ? this.eventType : (java.lang.CharSequence) defaultValue(fields()[10]);
        record.ip = fieldSetFlags()[11] ? this.ip : (java.lang.CharSequence) defaultValue(fields()[11]);
        record.tag = fieldSetFlags()[12] ? this.tag : (java.lang.CharSequence) defaultValue(fields()[12]);
        record.time = fieldSetFlags()[13] ? this.time : (java.lang.CharSequence) defaultValue(fields()[13]);
        record.isAd = fieldSetFlags()[14] ? this.isAd : (java.lang.Boolean) defaultValue(fields()[14]);
        record.uaValue = fieldSetFlags()[15] ? this.uaValue : (java.lang.CharSequence) defaultValue(fields()[15]);
        record.visitId = fieldSetFlags()[16] ? this.visitId : (java.lang.CharSequence) defaultValue(fields()[16]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<JseTrackingRelatedJobClick>
    WRITER$ = (org.apache.avro.io.DatumWriter<JseTrackingRelatedJobClick>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<JseTrackingRelatedJobClick>
    READER$ = (org.apache.avro.io.DatumReader<JseTrackingRelatedJobClick>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
